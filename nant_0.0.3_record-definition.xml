<?xml version="1.0" encoding="UTF-8"?>
<record-definition flat="false" prefix="nant" version="0.0.2">
  <namespaces>
    <namespace prefix="bf" uri="http://id.loc.gov/ontologies/bibframe/"/>
    <namespace prefix="cs" uri="http://www.kulttuurisampo.fi/ebkr/"/>
    <namespace prefix="dc" uri="http://purl.org/dc/elements/1.1/"/>
    <namespace prefix="dct" uri="http://purl.org/dc/terms/"/>		
    <namespace prefix="geo" uri="http://www.opengis.net/ont/geosparql#"/>
    <namespace prefix="hg" uri="http://rdf.histograph.io/"/>
    <namespace prefix="sd" uri="http://www.w3.org/ns/sparql-service-description#"/>
    <namespace prefix="vs" uri="http://www.w3.org/2003/06/sw-vocab-status/ns#"/>
    <namespace prefix="dbo" uri="http://dbpedia.org/ontology/"/>
    <namespace prefix="edm" uri="http://www.europeana.eu/schemas/edm/"/>
    <namespace prefix="naa" uri="https://archief.nl/def/"/>
    <namespace prefix="nant" uri="https://archief.nl/def/"/>
    <namespace prefix="nao" uri="https://archief.nl/def/ontologie/"/>
    <namespace prefix="nav" uri="https://archief.nl/def/vocabulaire/"/>
    <namespace prefix="pnv" uri="https://w3id.org/pnv#"/>
    <namespace prefix="ore" uri="http://www.openarchives.org/ore/terms/"/>
    <namespace prefix="org" uri="http://www.w3.org/ns/org#"/>
    <namespace prefix="owl" uri="http://www.w3.org/2002/07/owl#"/>
    <namespace prefix="rdf" uri="http://www.w3.org/1999/02/22-rdf-syntax-ns#"/>
    <namespace prefix="sem" uri="http://semanticweb.cs.vu.nl/2009/11/sem/"/>
    <namespace prefix="xml" uri="http://www.w3.org/XML/1998/namespace"/>
    <namespace prefix="xsd" uri="http://www.w3.org/2001/XMLSchema#"/>
    <namespace prefix="dcat" uri="https://www.w3.org/TR/vocab-dcat-2/"/>
    <namespace prefix="foaf" uri="http://xmlns.com/foaf/0.1/"/>
    <namespace prefix="iiif" uri="http://iiif.io/api/image/2#"/>
    <namespace prefix="prov" uri="http://www.w3.org/ns/prov#"/>
    <namespace prefix="rdfs" uri="http://www.w3.org/2000/01/rdf-schema#"/>
    <namespace prefix="skos" uri="http://www.w3.org/2004/02/skos/core#"/>
    <namespace prefix="svcs" uri="http://rdfs.org/sioc/services#"/>
    <namespace prefix="void" uri="http://rdfs.org/ns/void#"/>
    <namespace prefix="vcard" uri="http://www.w3.org/2006/vcard/ns#"/>
    <namespace prefix="frbroo" uri="http://iflastandards.info/ns/fr/frbr/frbroo/"/>
    <namespace prefix="premis" uri="http://www.loc.gov/premis/rdf/v3/"/>
    <namespace prefix="schema" uri="http://schema.org/"/>
    <namespace prefix="dcterms" uri="http://purl.org/dc/terms/"/>
    <namespace prefix="eac-cpf" uri="http://www3.iath.virginia.edu/eac/cpf/"/>
    <namespace prefix="ebucore" uri="http://www.ebu.ch/metadata/ontologies/ebucore/ebucore#"/>
    <namespace prefix="cidoc-crm" uri="http://www.cidoc-crm.org/cidoc-crm/"/>
    <namespace prefix="frbr_core" uri="http://purl.org/vocab/frbr/core#"/>
    <namespace prefix="odrl" uri="http://www.w3.org/ns/odrl/2/"/>
    <namespace prefix="adms" uri="http://www.w3.org/ns/adms#"/>
    <namespace prefix="ov" uri="http://open.vocab.org/terms/"/>
    <namespace prefix="agrl" uri="http://d-nb.info/standards/elementset/agrelon#"/>
  </namespaces>
  <functions>
    <mapping-function name="validUUID">
      <sample-input>
        <string>e3daa347-0528-4ece-b9bd-fae01a0f2e73</string>
        <string>e3daa347-0528-4ece-b9bd-fae01a0f2e7k</string>
      </sample-input>
      <groovy-code>
        <string>def matcher = "${it}" =~ /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/</string>
        <string>matcher.matches()</string>
      </groovy-code>
    </mapping-function>
    <mapping-function name="createOreAggregationUri">
      <sample-input>
        <string>00001</string>
      </sample-input>
      <groovy-code>
        <string>"${baseUrl}/resource/aggregation/${spec}/${_uniqueIdentifier.sanitizeURI()}"</string>
      </groovy-code>
    </mapping-function>
    <mapping-function name="createEDMAgentUri">
      <groovy-code>
        <string>StringBuilder out = new StringBuilder()</string>
        <string>for (char c : it.toString().chars) {</string>
        <string>switch (c) {</string>
        <string>case ' ':</string>
        <string>out.append('%20')</string>
        <string>break;</string>
        <string>case '[':</string>
        <string>out.append('%5B')</string>
        <string>break;</string>
        <string>case ']':</string>
        <string>out.append('%5D')</string>
        <string>break;</string>
        <string>case '\\':</string>
        <string>out.append('%5C')</string>
        <string>break;</string>
        <string>default:</string>
        <string>out.append(c);</string>
        <string>}</string>
        <string>}</string>
        <string>identifier = out.toString()</string>
        <string>"${baseUrl}/resource/agent/${spec}/${identifier}"</string>
      </groovy-code>
    </mapping-function>
    <mapping-function name="createEDMPlaceUri">
      <groovy-code>
        <string>StringBuilder out = new StringBuilder()</string>
        <string>for (char c : it.toString().chars) {</string>
        <string>switch (c) {</string>
        <string>case ' ':</string>
        <string>out.append('%20')</string>
        <string>break;</string>
        <string>case '[':</string>
        <string>out.append('%5B')</string>
        <string>break;</string>
        <string>case ']':</string>
        <string>out.append('%5D')</string>
        <string>break;</string>
        <string>case '\\':</string>
        <string>out.append('%5C')</string>
        <string>break;</string>
        <string>default:</string>
        <string>out.append(c);</string>
        <string>}</string>
        <string>}</string>
        <string>identifier = out.toString()</string>
        <string>"${baseUrl}/resource/place/${spec}/${identifier}"</string>
      </groovy-code>
    </mapping-function>
    <mapping-function name="lowercase">
      <sample-input>
        <string>Bla bla</string>
        <string>BLA bla bla</string>
      </sample-input>
      <groovy-code>
        <string>"${it.toString().toLowerCase()}"</string>
      </groovy-code>
    </mapping-function>
    <mapping-function name="reverseNames">
      <sample-input>
        <string>Sjoerd Siebinga</string>
        <string>Siebinga, Sjoerd</string>
        <string>Siebinga, Sjoerd Michiel</string>
      </sample-input>
      <groovy-code>
        <string>kwrd = "${it}".replaceAll('[^|,-_a-zA-Z0-9]','')</string>
        <string>parts = kwrd.toString().split(",")</string>
        <string>if (parts.length &gt; 1) {</string>
        <string>"${parts[1].trim()} ${parts[0]}"</string>
        <string>}</string>
        <string>else {</string>
        <string>"${it}"</string>
        <string>}</string>
      </groovy-code>
    </mapping-function>
    <mapping-function name="smallThumbnail">
      <groovy-code>
        <string>"http://media.delving.org/thumbnail/${spec}/${it.replaceAll('^.*[\\/|\\\\]','').replaceAll('(?i)\\.jpg|\\.jpeg|\\.tif|\\.tiff|\\.png|\\.gif', '')}/180"</string>
      </groovy-code>
    </mapping-function>
    <mapping-function name="createNTURI">
      <sample-input>
        <string>lkjljk</string>
      </sample-input>
      <groovy-code>
        <string>def utmOut = false</string>
        <string>String string = it.toString()</string>
        <string>if (string == '') {</string>
        <string>""</string>
        <string>}</string>
        <string>else {</string>
        <string>"nt00001"</string>
        <string>}</string>
      </groovy-code>
    </mapping-function>
    
<!-- 27 oktober 2020 - urilify archiefLink -->
    <mapping-function name="NA_archiefLink">
      <sample-input>
        <string>NL-HaNA/3.03.01.01/4271////01</string>
        <string>NL-HaNA/1.08.11/7318// fol. CCCXVIII//</string>
        <string>NL-HaNA/1.08.11/7318// fol. XCII vo//</string>
      </sample-input>
      <groovy-code>
        <string>"${it}".replaceAll('[ /]','_')</string>
      </groovy-code>
    </mapping-function>
    <mapping-function name="NA_createNARefByUri">
      <groovy-code>
        <string>StringBuilder out = new StringBuilder()</string>
        <string>for (char c : it.toString().chars) {</string>
        <string>switch (c) {</string>
        <string>case ' ':</string>
        <string>out.append('%20')</string>
        <string>break;</string>
        <string>case '[':</string>
        <string>out.append('%5B')</string>
        <string>break;</string>
        <string>case ']':</string>
        <string>out.append('%5D')</string>
        <string>break;</string>
        <string>case '\\':</string>
        <string>out.append('%5C')</string>
        <string>break;</string>
        <string>default:</string>
        <string>out.append(c);</string>
        <string>}</string>
        <string>}</string>
        <string>identifier = out.toString()</string>
        <string>code = "${spec}"</string>
        <string>it = code.substring(0,7)</string>
        <string>"${baseUrl}/naderetoegang/doc/${it}/${identifier}"</string>
      </groovy-code>
    </mapping-function>
    <mapping-function name="NA_giveNTCODE">
      <groovy-code>
        <string>code = "${spec}"</string>
        <string>it = code.substring(0,7)</string>
      </groovy-code>
    </mapping-function>
    <mapping-function name="NA_urilify">
      <sample-input>
        <string>kkjhdf lkjj(d)f[l]k.kj'fHaneGra%af</string>
      </sample-input>
      <groovy-code>
        <string>StringBuilder out = new StringBuilder()</string>
        <string>for (char c : it.toString().chars) {</string>
        <string>switch (c) {</string>
        <string>case ' ':</string>
        <string>out.append('_')</string>
        <string>break;</string>
        <string>case '.':</string>
        <string>out.append('')</string>
        <string>break;</string>
        <string>case ']':</string>
        <string>out.append('')</string>
        <string>break;</string>
        <string>case '\\':</string>
        <string>out.append('_')</string>
        <string>break;</string>
        <string>case '(':</string>
        <string>out.append('')</string>
        <string>break;</string>
        <string>case ']':</string>
        <string>out.append('')</string>
        <string>break;</string>
        <string>case '[':</string>
        <string>out.append('')</string>
        <string>break;</string>
        <string>case ')':</string>
        <string>out.append('')</string>
        <string>break;</string>
        <string>case '\'':</string>
        <string>out.append('')</string>
        <string>break;</string>
        <string>case '%':</string>
        <string>out.append('')</string>
        <string>break;</string>
        
<!--Toevoeging GK 20181018: komma , hekje # en & eruit gestript-->
        <string>case ',':</string>
        <string>out.append('')</string>
        <string>break;</string>
        <string>case '#':</string>
        <string>out.append('')</string>
        <string>break;</string>
        <string>case '&amp;':</string>
        <string>out.append('')</string>
        <string>break;</string>
        
<!-- replace {} -->
        <string>case '{':</string>
        <string>out.append('')</string>
        <string>break;</string>
        <string>case '}':</string>
        <string>out.append('')</string>
        <string>break;</string>
        
<!-- replace > character -->
        <string>case '&gt;':</string>
        <string>out.append('')</string>
        <string>break;</string>
        
<!-- replace special characters -->
        
<!-- Àà · Áá · Ââ · Ää · Ãã · Āā · Ąą · Ăă · Ǎǎ  -->
        <string>case 'À':</string>
        <string>out.append('A')</string>
        <string>break;</string>
        <string>case 'à':</string>
        <string>out.append('a')</string>
        <string>break;</string>
        <string>case 'Â':</string>
        <string>out.append('A')</string>
        <string>break;</string>
        <string>case 'á':</string>
        <string>out.append('a')</string>
        <string>break;</string>
        <string>case 'Ã':</string>
        <string>out.append('A')</string>
        <string>break;</string>
        <string>case 'â':</string>
        <string>out.append('a')</string>
        <string>break;</string>
        <string>case 'Ā':</string>
        <string>out.append('A')</string>
        <string>break;</string>
        <string>case 'ä':</string>
        <string>out.append('a')</string>
        <string>break;</string>
        <string>case 'Ą':</string>
        <string>out.append('A')</string>
        <string>break;</string>
        <string>case 'ą':</string>
        <string>out.append('a')</string>
        <string>break;</string>
        <string>case 'ã':</string>
        <string>out.append('a')</string>
        <string>break;</string>
        <string>case 'Ă':</string>
        <string>out.append('A')</string>
        <string>break;</string>
        <string>case 'ă':</string>
        <string>out.append('a')</string>
        <string>break;</string>
        <string>case 'Ǎ':</string>
        <string>out.append('A')</string>
        <string>break;</string>
        <string>case 'ǎ':</string>
        <string>out.append('a')</string>
        <string>break;</string>
        
<!-- Çç · Ĉĉ · Čč · Ćć  -->
        <string>case 'Ç':</string>
        <string>out.append('C')</string>
        <string>break;</string>
        <string>case 'ç':</string>
        <string>out.append('c')</string>
        <string>break;</string>
        <string>case 'Ĉ':</string>
        <string>out.append('C')</string>
        <string>break;</string>
        <string>case 'ĉ':</string>
        <string>out.append('c')</string>
        <string>break;</string>
        <string>case 'Č':</string>
        <string>out.append('C')</string>
        <string>break;</string>
        <string>case 'č':</string>
        <string>out.append('c')</string>
        <string>break;</string>
        <string>case 'Ć':</string>
        <string>out.append('C')</string>
        <string>break;</string>
        <string>case 'ć':</string>
        <string>out.append('c')</string>
        <string>break;</string>
        
<!-- Đđ · Ďď  -->
        <string>case 'Đ':</string>
        <string>out.append('D')</string>
        <string>break;</string>
        <string>case 'đ':</string>
        <string>out.append('d')</string>
        <string>break;</string>
        <string>case 'Ď':</string>
        <string>out.append('D')</string>
        <string>break;</string>
        <string>case 'ď':</string>
        <string>out.append('d')</string>
        <string>break;</string>
        
<!-- Èè · Éé · Êê · Ëë · Ęę · Ēē · Ĕĕ · Ėė · Ěě	 -->
        <string>case 'È':</string>
        <string>out.append('E')</string>
        <string>break;</string>
        <string>case 'è':</string>
        <string>out.append('e')</string>
        <string>break;</string>
        <string>case 'É':</string>
        <string>out.append('E')</string>
        <string>break;</string>
        <string>case 'é':</string>
        <string>out.append('e')</string>
        <string>break;</string>
        <string>case 'Ê':</string>
        <string>out.append('E')</string>
        <string>break;</string>
        <string>case 'ê':</string>
        <string>out.append('e')</string>
        <string>break;</string>
        <string>case 'Ë':</string>
        <string>out.append('E')</string>
        <string>break;</string>
        <string>case 'ë':</string>
        <string>out.append('e')</string>
        <string>break;</string>
        <string>case 'Ę':</string>
        <string>out.append('E')</string>
        <string>break;</string>
        <string>case 'ę':</string>
        <string>out.append('e')</string>
        <string>break;</string>
        <string>case 'Ē':</string>
        <string>out.append('E')</string>
        <string>break;</string>
        <string>case 'ē':</string>
        <string>out.append('e')</string>
        <string>break;</string>
        <string>case 'Ė':</string>
        <string>out.append('E')</string>
        <string>break;</string>
        <string>case 'ė':</string>
        <string>out.append('e')</string>
        <string>break;</string>
        <string>case 'Ě':</string>
        <string>out.append('E')</string>
        <string>break;</string>
        <string>case 'ě':</string>
        <string>out.append('e')</string>
        <string>break;</string>
        
<!--  Ĝĝ · Ğğ · Ġġ · Ģģ · Ǧǧ -->
        <string>case 'Ĝ':</string>
        <string>out.append('G')</string>
        <string>break;</string>
        <string>case 'ĝ':</string>
        <string>out.append('g')</string>
        <string>break;</string>
        <string>case 'Ğ':</string>
        <string>out.append('G')</string>
        <string>break;</string>
        <string>case 'ğ':</string>
        <string>out.append('g')</string>
        <string>break;</string>
        <string>case 'Ġ':</string>
        <string>out.append('G')</string>
        <string>break;</string>
        <string>case 'ġ':</string>
        <string>out.append('g')</string>
        <string>break;</string>
        <string>case 'Ģ':</string>
        <string>out.append('G')</string>
        <string>break;</string>
        <string>case 'ģ':</string>
        <string>out.append('g')</string>
        <string>break;</string>
        <string>case 'Ǧ':</string>
        <string>out.append('G')</string>
        <string>break;</string>
        <string>case 'ǧ':</string>
        <string>out.append('g')</string>
        <string>break;</string>
        
<!-- Ĥĥ · Ħħ -->
        <string>case 'Ĥ':</string>
        <string>out.append('H')</string>
        <string>break;</string>
        <string>case 'ĥ':</string>
        <string>out.append('h')</string>
        <string>break;</string>
        <string>case 'Ħ':</string>
        <string>out.append('H')</string>
        <string>break;</string>
        <string>case 'ħ':</string>
        <string>out.append('h')</string>
        <string>break;</string>
        
<!-- Ìì · Íí · Îî · Ïï · Įį · İı · Ĩĩ · Īī · Ĭĭ -->
        <string>case 'Ì':</string>
        <string>out.append('I')</string>
        <string>break;</string>
        <string>case 'ì':</string>
        <string>out.append('i')</string>
        <string>break;</string>
        <string>case 'Í':</string>
        <string>out.append('I')</string>
        <string>break;</string>
        <string>case 'í':</string>
        <string>out.append('i')</string>
        <string>break;</string>
        <string>case 'Î':</string>
        <string>out.append('I')</string>
        <string>break;</string>
        <string>case 'î':</string>
        <string>out.append('i')</string>
        <string>break;</string>
        <string>case 'Ï':</string>
        <string>out.append('I')</string>
        <string>break;</string>
        <string>case 'ï':</string>
        <string>out.append('i')</string>
        <string>break;</string>
        <string>case 'Į':</string>
        <string>out.append('I')</string>
        <string>break;</string>
        <string>case 'į':</string>
        <string>out.append('i')</string>
        <string>break;</string>
        <string>case 'İ':</string>
        <string>out.append('I')</string>
        <string>break;</string>
        <string>case 'ı':</string>
        <string>out.append('i')</string>
        <string>break;</string>
        <string>case 'Ĩ':</string>
        <string>out.append('I')</string>
        <string>break;</string>
        <string>case 'ĩ':</string>
        <string>out.append('i')</string>
        <string>break;</string>
        <string>case 'Ī':</string>
        <string>out.append('I')</string>
        <string>break;</string>
        <string>case 'ī':</string>
        <string>out.append('i')</string>
        <string>break;</string>
        <string>case 'Ĭ':</string>
        <string>out.append('I')</string>
        <string>break;</string>
        <string>case 'ĭ':</string>
        <string>out.append('i')</string>
        <string>break;</string>
        
<!-- Ĵĵ -->
        <string>case 'Ĵ':</string>
        <string>out.append('J')</string>
        <string>break;</string>
        <string>case 'ĵ':</string>
        <string>out.append('i')</string>
        <string>break;</string>
        
<!-- Ķķ · Ǩǩ -->
        <string>case 'Ķ':</string>
        <string>out.append('K')</string>
        <string>break;</string>
        <string>case 'ķ':</string>
        <string>out.append('k')</string>
        <string>break;</string>
        <string>case 'Ǩ':</string>
        <string>out.append('K')</string>
        <string>break;</string>
        <string>case 'ǩ':</string>
        <string>out.append('k')</string>
        <string>break;</string>
        
<!-- Ĺĺ · Ļļ · Ľľ · Ŀŀ · Łł -->
        <string>case 'Ĺ':</string>
        <string>out.append('L')</string>
        <string>break;</string>
        <string>case 'ĺ':</string>
        <string>out.append('l')</string>
        <string>break;</string>
        <string>case 'Ļ':</string>
        <string>out.append('L')</string>
        <string>break;</string>
        <string>case 'ļ':</string>
        <string>out.append('l')</string>
        <string>break;</string>
        <string>case 'Ľ':</string>
        <string>out.append('L')</string>
        <string>break;</string>
        <string>case 'ľ':</string>
        <string>out.append('l')</string>
        <string>break;</string>
        <string>case 'Ŀ':</string>
        <string>out.append('L')</string>
        <string>break;</string>
        <string>case 'ŀ':</string>
        <string>out.append('l')</string>
        <string>break;</string>
        <string>case 'Ł':</string>
        <string>out.append('L')</string>
        <string>break;</string>
        <string>case 'ł':</string>
        <string>out.append('l')</string>
        <string>break;</string>
        
<!-- Ńń · Ņņ · Ññ · Ňň · Ṅṅ -->
        <string>case 'Ń':</string>
        <string>out.append('N')</string>
        <string>break;</string>
        <string>case 'ń':</string>
        <string>out.append('n')</string>
        <string>break;</string>
        <string>case 'Ņ':</string>
        <string>out.append('N')</string>
        <string>break;</string>
        <string>case 'ņ':</string>
        <string>out.append('n')</string>
        <string>break;</string>
        <string>case 'Ñ':</string>
        <string>out.append('N')</string>
        <string>break;</string>
        <string>case 'ñ':</string>
        <string>out.append('n')</string>
        <string>break;</string>
        <string>case 'Ň':</string>
        <string>out.append('N')</string>
        <string>break;</string>
        <string>case 'ň':</string>
        <string>out.append('n')</string>
        <string>break;</string>
        <string>case 'Ṅ':</string>
        <string>out.append('N')</string>
        <string>break;</string>
        <string>case 'ṅ':</string>
        <string>out.append('n')</string>
        <string>break;</string>
        
<!--  Òò · Óó · Ôô · Öö · Õõ · Őő · Ǫǫ · Ōō · Ŏŏ · Ơơ -->
        <string>case 'Ò':</string>
        <string>out.append('O')</string>
        <string>break;</string>
        <string>case 'ò':</string>
        <string>out.append('o')</string>
        <string>break;</string>
        <string>case 'Ó':</string>
        <string>out.append('O')</string>
        <string>break;</string>
        <string>case 'ó':</string>
        <string>out.append('o')</string>
        <string>break;</string>
        <string>case 'Ô':</string>
        <string>out.append('O')</string>
        <string>break;</string>
        <string>case 'ô':</string>
        <string>out.append('o')</string>
        <string>break;</string>
        <string>case 'Ö':</string>
        <string>out.append('O')</string>
        <string>break;</string>
        <string>case 'ö':</string>
        <string>out.append('o')</string>
        <string>break;</string>
        <string>case 'Õ':</string>
        <string>out.append('O')</string>
        <string>break;</string>
        <string>case 'õ':</string>
        <string>out.append('o')</string>
        <string>break;</string>
        <string>case 'Ő':</string>
        <string>out.append('O')</string>
        <string>break;</string>
        <string>case 'ő':</string>
        <string>out.append('o')</string>
        <string>break;</string>
        <string>case 'Ǫ':</string>
        <string>out.append('O')</string>
        <string>break;</string>
        <string>case 'ǫ':</string>
        <string>out.append('o')</string>
        <string>break;</string>
        <string>case 'Ō':</string>
        <string>out.append('O')</string>
        <string>break;</string>
        <string>case 'ō':</string>
        <string>out.append('o')</string>
        <string>break;</string>
        <string>case 'Ŏ':</string>
        <string>out.append('O')</string>
        <string>break;</string>
        <string>case 'ŏ':</string>
        <string>out.append('o')</string>
        <string>break;</string>
        <string>case 'Ơ':</string>
        <string>out.append('O')</string>
        <string>break;</string>
        <string>case 'ơ':</string>
        <string>out.append('o')</string>
        <string>break;</string>
        
<!-- Ŕŕ · Ŗŗ · Řř -->
        <string>case 'Ŕ':</string>
        <string>out.append('R')</string>
        <string>break;</string>
        <string>case 'ŕ':</string>
        <string>out.append('r')</string>
        <string>break;</string>
        <string>case 'Ŗ':</string>
        <string>out.append('R')</string>
        <string>break;</string>
        <string>case 'ŗ':</string>
        <string>out.append('r')</string>
        <string>break;</string>
        <string>case 'Ř':</string>
        <string>out.append('R')</string>
        <string>break;</string>
        <string>case 'ř':</string>
        <string>out.append('r')</string>
        <string>break;</string>
        
<!-- Śś · Ŝŝ · Şş · Șș · Šš · ẞß · Þþ -->
        <string>case 'Ś':</string>
        <string>out.append('S')</string>
        <string>break;</string>
        <string>case 'ś':</string>
        <string>out.append('s')</string>
        <string>break;</string>
        <string>case 'Ŝ':</string>
        <string>out.append('S')</string>
        <string>break;</string>
        <string>case 'ŝ':</string>
        <string>out.append('s')</string>
        <string>break;</string>
        <string>case 'Ş':</string>
        <string>out.append('S')</string>
        <string>break;</string>
        <string>case 'ş':</string>
        <string>out.append('s')</string>
        <string>break;</string>
        <string>case 'Ș':</string>
        <string>out.append('S')</string>
        <string>break;</string>
        <string>case 'ș':</string>
        <string>out.append('s')</string>
        <string>break;</string>
        <string>case 'Š':</string>
        <string>out.append('S')</string>
        <string>break;</string>
        <string>case 'š':</string>
        <string>out.append('s')</string>
        <string>break;</string>
        <string>case 'ẞ':</string>
        <string>out.append('S')</string>
        <string>break;</string>
        <string>case 'ß':</string>
        <string>out.append('s')</string>
        <string>break;</string>
        <string>case 'Þ':</string>
        <string>out.append('S')</string>
        <string>break;</string>
        <string>case 'þ':</string>
        <string>out.append('s')</string>
        <string>break;</string>
        
<!-- Ťť · Ŧŧ · Ţţ · Țț  -->
        <string>case 'Ť':</string>
        <string>out.append('T')</string>
        <string>break;</string>
        <string>case 'ť':</string>
        <string>out.append('t')</string>
        <string>break;</string>
        <string>case 'Ŧ':</string>
        <string>out.append('T')</string>
        <string>break;</string>
        <string>case 'ŧ':</string>
        <string>out.append('t')</string>
        <string>break;</string>
        <string>case 'Ţ':</string>
        <string>out.append('T')</string>
        <string>break;</string>
        <string>case 'ţ':</string>
        <string>out.append('t')</string>
        <string>break;</string>
        <string>case 'Ț':</string>
        <string>out.append('T')</string>
        <string>break;</string>
        <string>case 'ț':</string>
        <string>out.append('t')</string>
        <string>break;</string>
        
<!-- Ùù · Úú · Ûû · Üü · Ũũ · Ūū · Ŭŭ · Ųų · Ůů · Űű · Ưư -->
        <string>case 'Ù':</string>
        <string>out.append('U')</string>
        <string>break;</string>
        <string>case 'ù':</string>
        <string>out.append('u')</string>
        <string>break;</string>
        <string>case 'Ú':</string>
        <string>out.append('U')</string>
        <string>break;</string>
        <string>case 'ú':</string>
        <string>out.append('u')</string>
        <string>break;</string>
        <string>case 'Û':</string>
        <string>out.append('U')</string>
        <string>break;</string>
        <string>case 'û':</string>
        <string>out.append('u')</string>
        <string>break;</string>
        <string>case 'Ü':</string>
        <string>out.append('U')</string>
        <string>break;</string>
        <string>case 'ü':</string>
        <string>out.append('u')</string>
        <string>break;</string>
        <string>case 'Ũ':</string>
        <string>out.append('U')</string>
        <string>break;</string>
        <string>case 'ũ':</string>
        <string>out.append('u')</string>
        <string>break;</string>
        <string>case 'Ū':</string>
        <string>out.append('U')</string>
        <string>break;</string>
        <string>case 'ū':</string>
        <string>out.append('u')</string>
        <string>break;</string>
        <string>case 'Ŭ':</string>
        <string>out.append('U')</string>
        <string>break;</string>
        <string>case 'ŭ':</string>
        <string>out.append('u')</string>
        <string>break;</string>
        <string>case 'Ų':</string>
        <string>out.append('U')</string>
        <string>break;</string>
        <string>case 'ų':</string>
        <string>out.append('u')</string>
        <string>break;</string>
        <string>case 'Ů':</string>
        <string>out.append('U')</string>
        <string>break;</string>
        <string>case 'ů':</string>
        <string>out.append('u')</string>
        <string>break;</string>
        <string>case 'Ű':</string>
        <string>out.append('U')</string>
        <string>break;</string>
        <string>case 'ű':</string>
        <string>out.append('u')</string>
        <string>break;</string>
        <string>case 'Ư':</string>
        <string>out.append('U')</string>
        <string>break;</string>
        <string>case 'ư':</string>
        <string>out.append('u')</string>
        <string>break;</string>
        
<!-- Ŵŵ -->
        <string>case 'Ŵ':</string>
        <string>out.append('W')</string>
        <string>break;</string>
        <string>case 'ŵ':</string>
        <string>out.append('w')</string>
        <string>break;</string>
        
<!-- Ýý · Ŷŷ · Ÿÿ -->
        <string>case 'Ý':</string>
        <string>out.append('Y')</string>
        <string>break;</string>
        <string>case 'ý':</string>
        <string>out.append('y')</string>
        <string>break;</string>
        <string>case 'Ŷ':</string>
        <string>out.append('Y')</string>
        <string>break;</string>
        <string>case 'ŷ':</string>
        <string>out.append('y')</string>
        <string>break;</string>
        <string>case 'Ÿ':</string>
        <string>out.append('Y')</string>
        <string>break;</string>
        <string>case 'ÿ':</string>
        <string>out.append('y')</string>
        <string>break;</string>
        
<!-- Źź · Žž · Żż -->
        <string>case 'Ź':</string>
        <string>out.append('Z')</string>
        <string>break;</string>
        <string>case 'ź':</string>
        <string>out.append('z')</string>
        <string>break;</string>
        <string>case 'Ž':</string>
        <string>out.append('Z')</string>
        <string>break;</string>
        <string>case 'ž':</string>
        <string>out.append('z')</string>
        <string>break;</string>
        <string>case 'Ż':</string>
        <string>out.append('Z')</string>
        <string>break;</string>
        <string>case 'ż':</string>
        <string>out.append('z')</string>
        <string>break;</string>
        
<!-- end replace special characters -->
        <string>default:</string>
        <string>out.append(c);</string>
        <string>}</string>
        <string>}</string>
        <string>identifier = out.toString().toLowerCase().replaceAll('[^-_a-zA-Z0-9]','')</string>
        <string>"${identifier}"</string>
      </groovy-code>
    </mapping-function>
    
<!-- 20181018 GK Functie toegevoegd om namen te urlifyen zonder dat ze naar kleine letters worden gezet -->
    <mapping-function name="NA_urilifyNames">
      <sample-input>
        <string>kkjhdf lkjj(d)f[l]k.kj'fHaneGra%af</string>
      </sample-input>
      <groovy-code>
        <string>StringBuilder out = new StringBuilder()</string>
        <string>for (char c : it.toString().chars) {</string>
        <string>switch (c) {</string>
        <string>case ' ':</string>
        <string>out.append('_')</string>
        <string>break;</string>
        <string>case '.':</string>
        <string>out.append('')</string>
        <string>break;</string>
        <string>case '{':</string>
        <string>out.append('')</string>
        <string>break;</string>
        <string>case '}':</string>
        <string>out.append('')</string>
        <string>break;</string>
        <string>case '\\':</string>
        <string>out.append('_')</string>
        <string>break;</string>
        <string>case '(':</string>
        <string>out.append('')</string>
        <string>break;</string>
        <string>case ']':</string>
        <string>out.append('')</string>
        <string>break;</string>
        <string>case '[':</string>
        <string>out.append('')</string>
        <string>break;</string>
        <string>case ')':</string>
        <string>out.append('')</string>
        <string>break;</string>
        <string>case '\'':</string>
        <string>out.append('')</string>
        <string>break;</string>
        <string>case '%':</string>
        <string>out.append('')</string>
        
<!--Toevoeging GK 20181018: komma , hekje # en & eruit gestript-->
        <string>case ',':</string>
        <string>out.append('')</string>
        <string>break;</string>
        <string>case '#':</string>
        <string>out.append('')</string>
        <string>break;</string>
        <string>case '&amp;':</string>
        <string>out.append('')</string>
        <string>break;</string>
        
<!-- replace {} -->
        <string>case '{':</string>
        <string>out.append('')</string>
        <string>break;</string>
        <string>case '}':</string>
        <string>out.append('')</string>
        <string>break;</string>
        
<!-- replace > character -->
        <string>case '&gt;':</string>
        <string>out.append('')</string>
        <string>break;</string>
        
<!-- replace special characters -->
        
<!-- replace special characters -->
        
<!-- Àà · Áá · Ââ · Ää · Ãã · Āā · Ąą · Ăă · Ǎǎ  -->
        <string>case 'À':</string>
        <string>out.append('A')</string>
        <string>break;</string>
        <string>case 'à':</string>
        <string>out.append('a')</string>
        <string>break;</string>
        <string>case 'Â':</string>
        <string>out.append('A')</string>
        <string>break;</string>
        <string>case 'á':</string>
        <string>out.append('a')</string>
        <string>break;</string>
        <string>case 'Ã':</string>
        <string>out.append('A')</string>
        <string>break;</string>
        <string>case 'â':</string>
        <string>out.append('a')</string>
        <string>break;</string>
        <string>case 'Ā':</string>
        <string>out.append('A')</string>
        <string>break;</string>
        <string>case 'ä':</string>
        <string>out.append('a')</string>
        <string>break;</string>
        <string>case 'Ą':</string>
        <string>out.append('A')</string>
        <string>break;</string>
        <string>case 'ą':</string>
        <string>out.append('a')</string>
        <string>break;</string>
        <string>case 'ã':</string>
        <string>out.append('a')</string>
        <string>break;</string>
        <string>case 'Ă':</string>
        <string>out.append('A')</string>
        <string>break;</string>
        <string>case 'ă':</string>
        <string>out.append('a')</string>
        <string>break;</string>
        <string>case 'Ǎ':</string>
        <string>out.append('A')</string>
        <string>break;</string>
        <string>case 'ǎ':</string>
        <string>out.append('a')</string>
        <string>break;</string>
        
<!-- Çç · Ĉĉ · Čč · Ćć  -->
        <string>case 'Ç':</string>
        <string>out.append('C')</string>
        <string>break;</string>
        <string>case 'ç':</string>
        <string>out.append('c')</string>
        <string>break;</string>
        <string>case 'Ĉ':</string>
        <string>out.append('C')</string>
        <string>break;</string>
        <string>case 'ĉ':</string>
        <string>out.append('c')</string>
        <string>break;</string>
        <string>case 'Č':</string>
        <string>out.append('C')</string>
        <string>break;</string>
        <string>case 'č':</string>
        <string>out.append('c')</string>
        <string>break;</string>
        <string>case 'Ć':</string>
        <string>out.append('C')</string>
        <string>break;</string>
        <string>case 'ć':</string>
        <string>out.append('c')</string>
        <string>break;</string>
        
<!-- Đđ · Ďď  -->
        <string>case 'Đ':</string>
        <string>out.append('D')</string>
        <string>break;</string>
        <string>case 'đ':</string>
        <string>out.append('d')</string>
        <string>break;</string>
        <string>case 'Ď':</string>
        <string>out.append('D')</string>
        <string>break;</string>
        <string>case 'ď':</string>
        <string>out.append('d')</string>
        <string>break;</string>
        
<!-- Èè · Éé · Êê · Ëë · Ęę · Ēē · Ĕĕ · Ėė · Ěě	 -->
        <string>case 'È':</string>
        <string>out.append('E')</string>
        <string>break;</string>
        <string>case 'è':</string>
        <string>out.append('e')</string>
        <string>break;</string>
        <string>case 'É':</string>
        <string>out.append('E')</string>
        <string>break;</string>
        <string>case 'é':</string>
        <string>out.append('e')</string>
        <string>break;</string>
        <string>case 'Ê':</string>
        <string>out.append('E')</string>
        <string>break;</string>
        <string>case 'ê':</string>
        <string>out.append('e')</string>
        <string>break;</string>
        <string>case 'Ë':</string>
        <string>out.append('E')</string>
        <string>break;</string>
        <string>case 'ë':</string>
        <string>out.append('e')</string>
        <string>break;</string>
        <string>case 'Ę':</string>
        <string>out.append('E')</string>
        <string>break;</string>
        <string>case 'ę':</string>
        <string>out.append('e')</string>
        <string>break;</string>
        <string>case 'Ē':</string>
        <string>out.append('E')</string>
        <string>break;</string>
        <string>case 'ē':</string>
        <string>out.append('e')</string>
        <string>break;</string>
        <string>case 'Ė':</string>
        <string>out.append('E')</string>
        <string>break;</string>
        <string>case 'ė':</string>
        <string>out.append('e')</string>
        <string>break;</string>
        <string>case 'Ě':</string>
        <string>out.append('E')</string>
        <string>break;</string>
        <string>case 'ě':</string>
        <string>out.append('e')</string>
        <string>break;</string>
        
<!--  Ĝĝ · Ğğ · Ġġ · Ģģ · Ǧǧ -->
        <string>case 'Ĝ':</string>
        <string>out.append('G')</string>
        <string>break;</string>
        <string>case 'ĝ':</string>
        <string>out.append('g')</string>
        <string>break;</string>
        <string>case 'Ğ':</string>
        <string>out.append('G')</string>
        <string>break;</string>
        <string>case 'ğ':</string>
        <string>out.append('g')</string>
        <string>break;</string>
        <string>case 'Ġ':</string>
        <string>out.append('G')</string>
        <string>break;</string>
        <string>case 'ġ':</string>
        <string>out.append('g')</string>
        <string>break;</string>
        <string>case 'Ģ':</string>
        <string>out.append('G')</string>
        <string>break;</string>
        <string>case 'ģ':</string>
        <string>out.append('g')</string>
        <string>break;</string>
        <string>case 'Ǧ':</string>
        <string>out.append('G')</string>
        <string>break;</string>
        <string>case 'ǧ':</string>
        <string>out.append('g')</string>
        <string>break;</string>
        
<!-- Ĥĥ · Ħħ -->
        <string>case 'Ĥ':</string>
        <string>out.append('H')</string>
        <string>break;</string>
        <string>case 'ĥ':</string>
        <string>out.append('h')</string>
        <string>break;</string>
        <string>case 'Ħ':</string>
        <string>out.append('H')</string>
        <string>break;</string>
        <string>case 'ħ':</string>
        <string>out.append('h')</string>
        <string>break;</string>
        
<!-- Ìì · Íí · Îî · Ïï · Įį · İı · Ĩĩ · Īī · Ĭĭ -->
        <string>case 'Ì':</string>
        <string>out.append('I')</string>
        <string>break;</string>
        <string>case 'ì':</string>
        <string>out.append('i')</string>
        <string>break;</string>
        <string>case 'Í':</string>
        <string>out.append('I')</string>
        <string>break;</string>
        <string>case 'í':</string>
        <string>out.append('i')</string>
        <string>break;</string>
        <string>case 'Î':</string>
        <string>out.append('I')</string>
        <string>break;</string>
        <string>case 'î':</string>
        <string>out.append('i')</string>
        <string>break;</string>
        <string>case 'Ï':</string>
        <string>out.append('I')</string>
        <string>break;</string>
        <string>case 'ï':</string>
        <string>out.append('i')</string>
        <string>break;</string>
        <string>case 'Į':</string>
        <string>out.append('I')</string>
        <string>break;</string>
        <string>case 'į':</string>
        <string>out.append('i')</string>
        <string>break;</string>
        <string>case 'İ':</string>
        <string>out.append('I')</string>
        <string>break;</string>
        <string>case 'ı':</string>
        <string>out.append('i')</string>
        <string>break;</string>
        <string>case 'Ĩ':</string>
        <string>out.append('I')</string>
        <string>break;</string>
        <string>case 'ĩ':</string>
        <string>out.append('i')</string>
        <string>break;</string>
        <string>case 'Ī':</string>
        <string>out.append('I')</string>
        <string>break;</string>
        <string>case 'ī':</string>
        <string>out.append('i')</string>
        <string>break;</string>
        <string>case 'Ĭ':</string>
        <string>out.append('I')</string>
        <string>break;</string>
        <string>case 'ĭ':</string>
        <string>out.append('i')</string>
        <string>break;</string>
        
<!-- Ĵĵ -->
        <string>case 'Ĵ':</string>
        <string>out.append('J')</string>
        <string>break;</string>
        <string>case 'ĵ':</string>
        <string>out.append('i')</string>
        <string>break;</string>
        
<!-- Ķķ · Ǩǩ -->
        <string>case 'Ķ':</string>
        <string>out.append('K')</string>
        <string>break;</string>
        <string>case 'ķ':</string>
        <string>out.append('k')</string>
        <string>break;</string>
        <string>case 'Ǩ':</string>
        <string>out.append('K')</string>
        <string>break;</string>
        <string>case 'ǩ':</string>
        <string>out.append('k')</string>
        <string>break;</string>
        
<!-- Ĺĺ · Ļļ · Ľľ · Ŀŀ · Łł -->
        <string>case 'Ĺ':</string>
        <string>out.append('L')</string>
        <string>break;</string>
        <string>case 'ĺ':</string>
        <string>out.append('l')</string>
        <string>break;</string>
        <string>case 'Ļ':</string>
        <string>out.append('L')</string>
        <string>break;</string>
        <string>case 'ļ':</string>
        <string>out.append('l')</string>
        <string>break;</string>
        <string>case 'Ľ':</string>
        <string>out.append('L')</string>
        <string>break;</string>
        <string>case 'ľ':</string>
        <string>out.append('l')</string>
        <string>break;</string>
        <string>case 'Ŀ':</string>
        <string>out.append('L')</string>
        <string>break;</string>
        <string>case 'ŀ':</string>
        <string>out.append('l')</string>
        <string>break;</string>
        <string>case 'Ł':</string>
        <string>out.append('L')</string>
        <string>break;</string>
        <string>case 'ł':</string>
        <string>out.append('l')</string>
        <string>break;</string>
        
<!-- Ńń · Ņņ · Ññ · Ňň · Ṅṅ -->
        <string>case 'Ń':</string>
        <string>out.append('N')</string>
        <string>break;</string>
        <string>case 'ń':</string>
        <string>out.append('n')</string>
        <string>break;</string>
        <string>case 'Ņ':</string>
        <string>out.append('N')</string>
        <string>break;</string>
        <string>case 'ņ':</string>
        <string>out.append('n')</string>
        <string>break;</string>
        <string>case 'Ñ':</string>
        <string>out.append('N')</string>
        <string>break;</string>
        <string>case 'ñ':</string>
        <string>out.append('n')</string>
        <string>break;</string>
        <string>case 'Ň':</string>
        <string>out.append('N')</string>
        <string>break;</string>
        <string>case 'ň':</string>
        <string>out.append('n')</string>
        <string>break;</string>
        <string>case 'Ṅ':</string>
        <string>out.append('N')</string>
        <string>break;</string>
        <string>case 'ṅ':</string>
        <string>out.append('n')</string>
        <string>break;</string>
        
<!--  Òò · Óó · Ôô · Öö · Õõ · Őő · Ǫǫ · Ōō · Ŏŏ · Ơơ -->
        <string>case 'Ò':</string>
        <string>out.append('O')</string>
        <string>break;</string>
        <string>case 'ò':</string>
        <string>out.append('o')</string>
        <string>break;</string>
        <string>case 'Ó':</string>
        <string>out.append('O')</string>
        <string>break;</string>
        <string>case 'ó':</string>
        <string>out.append('o')</string>
        <string>break;</string>
        <string>case 'Ô':</string>
        <string>out.append('O')</string>
        <string>break;</string>
        <string>case 'ô':</string>
        <string>out.append('o')</string>
        <string>break;</string>
        <string>case 'Ö':</string>
        <string>out.append('O')</string>
        <string>break;</string>
        <string>case 'ö':</string>
        <string>out.append('o')</string>
        <string>break;</string>
        <string>case 'Õ':</string>
        <string>out.append('O')</string>
        <string>break;</string>
        <string>case 'õ':</string>
        <string>out.append('o')</string>
        <string>break;</string>
        <string>case 'Ő':</string>
        <string>out.append('O')</string>
        <string>break;</string>
        <string>case 'ő':</string>
        <string>out.append('o')</string>
        <string>break;</string>
        <string>case 'Ǫ':</string>
        <string>out.append('O')</string>
        <string>break;</string>
        <string>case 'ǫ':</string>
        <string>out.append('o')</string>
        <string>break;</string>
        <string>case 'Ō':</string>
        <string>out.append('O')</string>
        <string>break;</string>
        <string>case 'ō':</string>
        <string>out.append('o')</string>
        <string>break;</string>
        <string>case 'Ŏ':</string>
        <string>out.append('O')</string>
        <string>break;</string>
        <string>case 'ŏ':</string>
        <string>out.append('o')</string>
        <string>break;</string>
        <string>case 'Ơ':</string>
        <string>out.append('O')</string>
        <string>break;</string>
        <string>case 'ơ':</string>
        <string>out.append('o')</string>
        <string>break;</string>
        
<!-- Ŕŕ · Ŗŗ · Řř -->
        <string>case 'Ŕ':</string>
        <string>out.append('R')</string>
        <string>break;</string>
        <string>case 'ŕ':</string>
        <string>out.append('r')</string>
        <string>break;</string>
        <string>case 'Ŗ':</string>
        <string>out.append('R')</string>
        <string>break;</string>
        <string>case 'ŗ':</string>
        <string>out.append('r')</string>
        <string>break;</string>
        <string>case 'Ř':</string>
        <string>out.append('R')</string>
        <string>break;</string>
        <string>case 'ř':</string>
        <string>out.append('r')</string>
        <string>break;</string>
        
<!-- Śś · Ŝŝ · Şş · Șș · Šš · ẞß · Þþ -->
        <string>case 'Ś':</string>
        <string>out.append('S')</string>
        <string>break;</string>
        <string>case 'ś':</string>
        <string>out.append('s')</string>
        <string>break;</string>
        <string>case 'Ŝ':</string>
        <string>out.append('S')</string>
        <string>break;</string>
        <string>case 'ŝ':</string>
        <string>out.append('s')</string>
        <string>break;</string>
        <string>case 'Ş':</string>
        <string>out.append('S')</string>
        <string>break;</string>
        <string>case 'ş':</string>
        <string>out.append('s')</string>
        <string>break;</string>
        <string>case 'Ș':</string>
        <string>out.append('S')</string>
        <string>break;</string>
        <string>case 'ș':</string>
        <string>out.append('s')</string>
        <string>break;</string>
        <string>case 'Š':</string>
        <string>out.append('S')</string>
        <string>break;</string>
        <string>case 'š':</string>
        <string>out.append('s')</string>
        <string>break;</string>
        <string>case 'ẞ':</string>
        <string>out.append('S')</string>
        <string>break;</string>
        <string>case 'ß':</string>
        <string>out.append('s')</string>
        <string>break;</string>
        <string>case 'Þ':</string>
        <string>out.append('S')</string>
        <string>break;</string>
        <string>case 'þ':</string>
        <string>out.append('s')</string>
        <string>break;</string>
        
<!-- Ťť · Ŧŧ · Ţţ · Țț  -->
        <string>case 'Ť':</string>
        <string>out.append('T')</string>
        <string>break;</string>
        <string>case 'ť':</string>
        <string>out.append('t')</string>
        <string>break;</string>
        <string>case 'Ŧ':</string>
        <string>out.append('T')</string>
        <string>break;</string>
        <string>case 'ŧ':</string>
        <string>out.append('t')</string>
        <string>break;</string>
        <string>case 'Ţ':</string>
        <string>out.append('T')</string>
        <string>break;</string>
        <string>case 'ţ':</string>
        <string>out.append('t')</string>
        <string>break;</string>
        <string>case 'Ț':</string>
        <string>out.append('T')</string>
        <string>break;</string>
        <string>case 'ț':</string>
        <string>out.append('t')</string>
        <string>break;</string>
        
<!-- Ùù · Úú · Ûû · Üü · Ũũ · Ūū · Ŭŭ · Ųų · Ůů · Űű · Ưư -->
        <string>case 'Ù':</string>
        <string>out.append('U')</string>
        <string>break;</string>
        <string>case 'ù':</string>
        <string>out.append('u')</string>
        <string>break;</string>
        <string>case 'Ú':</string>
        <string>out.append('U')</string>
        <string>break;</string>
        <string>case 'ú':</string>
        <string>out.append('u')</string>
        <string>break;</string>
        <string>case 'Û':</string>
        <string>out.append('U')</string>
        <string>break;</string>
        <string>case 'û':</string>
        <string>out.append('u')</string>
        <string>break;</string>
        <string>case 'Ü':</string>
        <string>out.append('U')</string>
        <string>break;</string>
        <string>case 'ü':</string>
        <string>out.append('u')</string>
        <string>break;</string>
        <string>case 'Ũ':</string>
        <string>out.append('U')</string>
        <string>break;</string>
        <string>case 'ũ':</string>
        <string>out.append('u')</string>
        <string>break;</string>
        <string>case 'Ū':</string>
        <string>out.append('U')</string>
        <string>break;</string>
        <string>case 'ū':</string>
        <string>out.append('u')</string>
        <string>break;</string>
        <string>case 'Ŭ':</string>
        <string>out.append('U')</string>
        <string>break;</string>
        <string>case 'ŭ':</string>
        <string>out.append('u')</string>
        <string>break;</string>
        <string>case 'Ų':</string>
        <string>out.append('U')</string>
        <string>break;</string>
        <string>case 'ų':</string>
        <string>out.append('u')</string>
        <string>break;</string>
        <string>case 'Ů':</string>
        <string>out.append('U')</string>
        <string>break;</string>
        <string>case 'ů':</string>
        <string>out.append('u')</string>
        <string>break;</string>
        <string>case 'Ű':</string>
        <string>out.append('U')</string>
        <string>break;</string>
        <string>case 'ű':</string>
        <string>out.append('u')</string>
        <string>break;</string>
        <string>case 'Ư':</string>
        <string>out.append('U')</string>
        <string>break;</string>
        <string>case 'ư':</string>
        <string>out.append('u')</string>
        <string>break;</string>
        
<!-- Ŵŵ -->
        <string>case 'Ŵ':</string>
        <string>out.append('W')</string>
        <string>break;</string>
        <string>case 'ŵ':</string>
        <string>out.append('w')</string>
        <string>break;</string>
        
<!-- Ýý · Ŷŷ · Ÿÿ -->
        <string>case 'Ý':</string>
        <string>out.append('Y')</string>
        <string>break;</string>
        <string>case 'ý':</string>
        <string>out.append('y')</string>
        <string>break;</string>
        <string>case 'Ŷ':</string>
        <string>out.append('Y')</string>
        <string>break;</string>
        <string>case 'ŷ':</string>
        <string>out.append('y')</string>
        <string>break;</string>
        <string>case 'Ÿ':</string>
        <string>out.append('Y')</string>
        <string>break;</string>
        <string>case 'ÿ':</string>
        <string>out.append('y')</string>
        <string>break;</string>
        
<!-- Źź · Žž · Żż -->
        <string>case 'Ź':</string>
        <string>out.append('Z')</string>
        <string>break;</string>
        <string>case 'ź':</string>
        <string>out.append('z')</string>
        <string>break;</string>
        <string>case 'Ž':</string>
        <string>out.append('Z')</string>
        <string>break;</string>
        <string>case 'ž':</string>
        <string>out.append('z')</string>
        <string>break;</string>
        <string>case 'Ż':</string>
        <string>out.append('Z')</string>
        <string>break;</string>
        <string>case 'ż':</string>
        <string>out.append('z')</string>
        <string>break;</string>
        
<!-- end replace special characters -->
        <string>default:</string>
        <string>out.append(c);</string>
        <string>}</string>
        <string>}</string>
        <string>identifier = out.toString().replaceAll('[^-_a-zA-Z0-9]','')</string>
        <string>"${identifier}"</string>
      </groovy-code>
    </mapping-function>
    <mapping-function name="NA_trefwoorden">
      <sample-input>
        <string>De Katholieke Vrouw	|De Nieuwe Eeuw	|De Tijd	|Gelderlander	|Helmer J.W.	|Kallen A. van der	|Laudy Alphons	|Nieuwenhuis W.	|Pol Max van	|Steenhoff-Smulders Albertine	|Tijd</string>
      </sample-input>
      <groovy-code>
        <string>kwrd = "${it}".replaceAll('[^ |_a-zA-Z0-9]','').capitalize()</string>
        <string>parts = kwrd.toString().split(",")</string>
        <string>if (parts.length &gt; 1) {</string>
        <string>"${parts[1].trim()} ${parts[0]}"</string>
        <string>}</string>
        <string>else {</string>
        <string>"${it}"</string>
        <string>}</string>
      </groovy-code>
    </mapping-function>
    <mapping-function name="NA_splitgeo_about">
      <sample-input>
        <string>Tutucorin</string>
        <string>- - - - -</string>
        <string>Jaffanapatnam</string>
        <string>- - - - -</string>
        <string>Tutucorin|Jaffanapatnam</string>
        <string>- - - - -</string>
        <string>Tutucorin|Jaffanapatnam|Macao|Engelsen</string>
      </sample-input>
      <groovy-code>
        <string>kwrd = "${it.toLowerCase()}"</string>
        <string>parts = kwrd.toString().split("\\|")</string>
        <string>if (parts.length &gt; 1) {</string>
        <string>"${parts[0].trim()}"</string>
        <string>}</string>
        <string>else {</string>
        <string>"${kwrd}"</string>
        <string>}</string>
      </groovy-code>
    </mapping-function>
    <mapping-function name="NA_splitgeo_label">
      <sample-input>
        <string>Tutucorin</string>
        <string>- - - - -</string>
        <string>Jaffanapatnam</string>
        <string>- - - - -</string>
        <string>Tutucorin|Jaffanapatnam</string>
        <string>- - - - -</string>
        <string>Tutucorin|Jaffanapatnam|Macao|Engelsen</string>
      </sample-input>
      <groovy-code>
        <string>kwrd = "${it}"</string>
        <string>parts = kwrd.toString().split("\\|")</string>
        <string>if (parts.length &gt; 1) {</string>
        <string>"${parts[0].trim()}"</string>
        <string>}</string>
        <string>else {</string>
        <string>"${it}"</string>
        <string>}</string>
      </groovy-code>
    </mapping-function>
    <mapping-function name="NA_genereerDataSetUrl">
      <groovy-code>
        <string>code = "${spec}"</string>
        <string>it = "${baseUrl}/doc/Dataset-" + code.substring(0,7)</string>
      </groovy-code>
    </mapping-function>
    <mapping-function name="hyphenateGUID">
      <sample-input>
        <string>64ca27d182201d1ce0530518a8c06b96</string>
      </sample-input>
      <groovy-code>
        <string>"${it}".toLowerCase().replaceAll('^([0-9a-f]{8})([0-9a-f]{4})([0-9a-f]{4})([0-9a-f]{4})([0-9a-f]{12})', '$1-$2-$3-$4-$5')</string>
      </groovy-code>
    </mapping-function>
    <mapping-function name="test">
      <sample-input>
        <string>64AC27d182201d1ce0530518a8c06b96</string>
      </sample-input>
      <groovy-code>
        <string>"${it}".toLowerCase().replaceAll('^([0-9a-f]{8})([0-9a-f]{4})([0-9a-f]{4})([0-9a-f]{4})([0-9a-f]{12})', '$1-$2-$3-$4-$5')</string>
      </groovy-code>
    </mapping-function>
    <mapping-function name="NA_lowercase_spec">
      <groovy-code>
        <string>StringBuilder out = new StringBuilder()</string>
        <string>for (char c : it.toString().chars) {</string>
        <string>switch (c) {</string>
        <string>case '-':</string>
        <string>out.append('.')</string>
        <string>break;</string>
        <string>default:</string>
        <string>out.append(c);</string>
        <string>}</string>
        <string>}</string>
        <string>identifier = out.toString()</string>
        <string>"${spec}".toLowerCase().replaceAll('-','.')</string>
      </groovy-code>
    </mapping-function>
    <mapping-function name="NA_uppercase_spec">
      <groovy-code>
        <string>StringBuilder out = new StringBuilder()</string>
        <string>for (char c : it.toString().chars) {</string>
        <string>switch (c) {</string>
        <string>case '-':</string>
        <string>out.append('.')</string>
        <string>break;</string>
        <string>default:</string>
        <string>out.append(c);</string>
        <string>}</string>
        <string>}</string>
        <string>identifier = out.toString()</string>
        <string>"${spec}".toUpperCase().replaceAll('-','.')</string>
      </groovy-code>
    </mapping-function>
  </functions>
  <attrs>
    <attr tag="rdf:about" uriCheck="true"/>
    <attr tag="rdf:resource"/>
    <attr tag="rdf:datatype"/>
    <attr tag="rdf:type"/>
    <attr tag="rdf:parseType"/>
    <attr tag="xml:lang"/>
  </attrs>
  
<!-- START - root -->
  <root tag="nant:RDF">
    <node-mapping inputPath="/input"/>
    
<!-- start ore:Aggregation - -->
    <elem tag="ore:Aggregation">
      
<!-- 15-09-2019 - automatische mapping: geldig voor zowel Beeldbank en Nadere toegangen -->
      
<!-- Record 0 bevat ook de eventuele TENANT switch i.g.v. RHC's gebruik gaan maken van de HUB -->
      
<!-- Dit was nog i.o.v. Gijsbert Kruithof, maar moet nog worden verfijnt en vastgelegd in de architectuur  -->
      <attr tag="rdf:about" uriCheck="true">
        <node-mapping inputPath="/input" outputPath="/nant:RDF/ore:Aggregation/@rdf:about">
          <groovy-code>
            <string>if (_input.dcsubjectsoort_ == "Nadere toegangen" ) {</string>
            <string>"${baseUrl}/doc/" + NA_lowercase_spec()</string>
            <string>}</string>
          </groovy-code>
        </node-mapping>				
      </attr>
      
<!-- 20181001 GK gebruiken van ore:aggregation voor fotocollectie als geheel -->
      
<!-- 15-09-2019 - automatische mapping: geldig voor zowel Beeldbank en Nadere toegangen -->
      <elem tag="nao:isAggregatietype">
        <attr tag="rdf:resource" uriCheck="true">
          <node-mapping inputPath="/input" outputPath="/nant:RDF/ore:Aggregation/nao:isAggregatietype/@rdf:resource">
            <groovy-code>
              <string>if (_input.dcsubjectsoort_ == "Nadere toegangen" ) {</string>
              <string>"${baseUrl}/def/Index"</string>
              <string>}</string>
            </groovy-code>
          </node-mapping>
        </attr>
        <attr tag="xml:lang"/>
      </elem>
      
<!-- 15-09-2019 - automatische mapping: geldig voor zowel Beeldbank en Nadere toegangen -->
      
<!-- Switch xml:lang teruggeplaatst in element -->
      <elem attrs="xml:lang" tag="rdfs:label">
        <node-mapping inputPath="/input" outputPath="/nant:RDF/ore:Aggregation/rdfs:label">
          <groovy-code>
            <string>if (_input.dcsubjectsoort_ == "Nadere toegangen") {</string>
            <string>"${_input.dcsubjectabbreviation_}"</string>
            <string>}</string>
          </groovy-code>
        </node-mapping>
      </elem>
      <elem attrs="xml:lang" tag="skos:prefLabel"/>
      
<!-- 20181005 GK. Toegevoegd dcat dataset properties -->
      <elem attrs="xml:lang" tag="skos:altLabel"/>
      
<!-- Titel van de collectie -->
      <elem attrs="xml:lang" tag="dc:title"/>
      
<!-- 20181005 GK. Toegevoegd dcat dataset properties -->
      <elem attrs="rdf:resource,xml:lang" tag="dcterms:description"/>
      
<!-- MAIS toegangscode / nummer archiefinventaris / toegangsnummer-->
      <elem attrs="xml:lang" tag="nao:inventarisnummer"/>
      
<!-- guid MAIS -->
      <elem tag="nao:uuid">
        <node-mapping inputPath="/input/@id" outputPath="/nant:RDF/ore:Aggregation/nao:uuid">
          <groovy-code>
            <string>if (_input.dcsubjectsoort_)</string>
            <string>"${_id}"</string>
          </groovy-code>
        </node-mapping>
      </elem>
      <elem tag="nao:toegangsnummer"/>
      <elem tag="nao:ntCode">
        <node-mapping inputPath="/input" outputPath="/nant:RDF/ore:Aggregation/nao:ntCode">
          <groovy-code>
            <string>if (_input.dcsubjectsoort_)</string>
            <string>"${_input.dcidentifiercode_}"</string>
          </groovy-code>
        </node-mapping>
      </elem>
      <elem attrs="xml:lang" tag="dc:identifier">
        <node-mapping inputPath="/input/@id" outputPath="/nant:RDF/ore:Aggregation/dc:identifier">
          <groovy-code>
            <string>if (_input.dcsubjectsoort_)</string>
            <string>"${_id}"</string>
          </groovy-code>
        </node-mapping>
      </elem>
      
<!-- Mais Handle  -->
      <elem attrs="rdf:resource" tag="edm:isShownAt"/>
      
<!-- The primary topic of this aggregation, record or document. -->
      <elem attrs="rdf:resource" tag="foaf:primaryTopic"/>
      
<!-- Verwijzing naar genest object (onderdeel van deze aggregatie) -->
      <elem attrs="rdf:resource" tag="ore:aggregates"/>
      <elem attrs="rdf:resource" tag="edm:hasView"/>
      
<!-- Wanneer de aggregatie gemaakt is -->
      <elem attrs="xml:lang, rdf:datatype" tag="dcterms:issued"/>
      <elem attrs="rdf:resource,xml:lang" tag="dcterms:relation"/>
      
<!-- MAIS Wijzigingsdatum -->
      <elem attrs="rdf:resource,xml:lang,rdf:datatype" tag="dcterms:modified"/>
      
<!-- 20181005 GK. Toegevoegd dcat dataset properties -->
      <elem attrs="rdf:resource,xml:lang" tag="dcat:keyword"/>
      <elem attrs="rdf:resource,xml:lang" tag="dcat:landingPage"/>
      <elem attrs="rdf:resource,xml:lang" tag="dc:creator"/>
      <elem attrs="rdf:resource,xml:lang,rdf:datatype" tag="dcterms:creator"/>
      <elem attrs="rdf:resource,xml:lang" tag="dc:date"/>
      <elem tag="dc:language"/>
      <elem attrs="xml:lang" tag="dc:publisher">
		<node-mapping inputPath="/input" outputPath="/nant:RDF/ore:Aggregation/dc:publisher">
		  <groovy-code>
			<string>if (_input.dcsubjectsoort_)</string>
			<string>&quot;${_input.dcsubjectauteur_}&quot;</string>
		  </groovy-code>
		</node-mapping>
      </elem>
      <elem attrs="rdf:resource,xml:lang,rdf:datatype" tag="dcterms:publisher"/>
      
<!-- Dc:terms Spatial kan gebruikt worden voor lokatie. GK 20200501-->
      <elem attrs="rdf:resource" tag="dcterms:spatial"/>
      <elem attrs="xml:lang" tag="dc:coverage">
		<node-mapping inputPath="/input" outputPath="/nant:RDF/ore:Aggregation/dc:coverage">
		  <groovy-code>
			<string>if (_input.dcsubjectsoort_)</string>
			<string>&quot;${_input.dcsubjectdatering_}&quot;</string>
		  </groovy-code>
		</node-mapping>
      </elem>
      <elem attrs="xml:lang" tag="edm:begin">
    <node-mapping inputPath="/input" outputPath="/nant:RDF/ore:Aggregation/edm:begin">
      <groovy-code>
        <string>if (_input.dcsubjectsoort_)</string>
        <string>&quot;${_input.dcsubjectbeginjaar_}&quot;</string>
      </groovy-code>
    </node-mapping>
      </elem>
      
<!-- MAIS Einddatum (bijvoorbeeld 0000-00-00) -->
      <elem attrs="xml:lang" tag="edm:end">
    <node-mapping inputPath="/input" outputPath="/nant:RDF/ore:Aggregation/edm:end">
      <groovy-code>
        <string>if (_input.dcsubjectsoort_)</string>
        <string>&quot;${_input.dcsubjecteindjaar_}&quot;</string>
      </groovy-code>
    </node-mapping>
      </elem>
      
<!-- Toegevoegd 20181001 GK gebruiken van ore:aggregation voor fotocollectie als geheel -->
    </elem>
    
<!-- end - ore:Aggregation -->
    
<!-- start elem - RecordAggregation -->
    <elem tag="nao:Recordaggregatie">
      <attr tag="rdf:about" uriCheck="true">
        <node-mapping inputPath="/input" outputPath="/nant:RDF/nao:Recordaggregatie/@rdf:about">
          <groovy-code>
            <string>if ((_input.dcsubjectrecordsoort_ == "NTRecord" )) {</string>
            <string>"${baseUrl}/doc/indexrecord/${_uniqueIdentifier.sanitizeURI()}"</string>
            <string>}</string>
          </groovy-code>
        </node-mapping>
      </attr>
      <elem attrs="xml:lang" tag="nao:aet">
        <node-mapping inputPath="/input" outputPath="/nant:RDF/nao:Recordaggregatie/nao:aet">
          <groovy-code>
            <string>if (_input.dcsubjectrecordsoort_)</string>
            <string>if (_input.dcidentifiercode_) {</string>
            <string>"${_input.dcsubjectaet_}".capitalize()</string>
            <string>}</string>
          </groovy-code>
        </node-mapping>
      </elem>
      
<!-- Additioneel type dd 6-7-2018  -->
      <elem attrs="rdf:resource" tag="rdf:type"/>
      
<!-- Indien mogelijk een label toewijzen -->

      
<!-- Vaste waarde conform mapping Lauri Rondolo -->      
      <elem attrs="xml:lang" tag="rdfs:label">
        <node-mapping inputPath="/input/record" outputPath="/nant:RDF/nao:Recordaggregatie/rdfs:label">
          <groovy-code>
            <string>if (_input.dcsubjectrecordsoort_)</string>
            <string>"Record over ${_input.dcsubjectaet_}"</string>
          </groovy-code>
        </node-mapping>
      </elem>
      
<!-- Vaste waarde conform mapping Lauri Rondolo -->
      <elem attrs="xml:lang" tag="skos:prefLabel">
        <node-mapping inputPath="/input" outputPath="/nant:RDF/nao:Recordaggregatie/skos:prefLabel">
          <groovy-code>
            <string>if (_input.dcsubjectrecordsoort_)</string>
            <string>"Record over ${_input.dcsubjectaet_}"</string>
          </groovy-code>
        </node-mapping>
      </elem>
      <elem attrs="xml:lang" tag="dc:identifier">
        <node-mapping inputPath="/input/@id" outputPath="/nant:RDF/nao:Recordaggregatie/dc:identifier">
          <groovy-code>
            <string>if (_input.dcsubjectrecordsoort_)</string>
            <string>"${_id}"</string>
          </groovy-code>
        </node-mapping>
      </elem>
      
<!-- Mais Handle  -->
      <elem tag="edm:isShownAt">
        <attr tag="rdf:resource" uriCheck="true">
          <node-mapping inputPath="/input" outputPath="/nant:RDF/nao:Recordaggregatie/edm:isShownAt/@rdf:resource">
            <groovy-code>
              <string>if (_input.dcsubjectrecordsoort_ == "NTRecord")</string>
              <string>"http://hdl.handle.net/10648/${_uniqueIdentifier}"</string>
            </groovy-code>
          </node-mapping>
        </attr>
      </elem>
      
<!-- The primary topic of this aggregation, record or document. -->
      <elem attrs="rdf:resource" tag="foaf:primaryTopic"/>
      
<!-- MAIS Webdisplay verwijzing naar het GAF zichtexemplaar-->
      <elem attrs="rdf:resource" tag="edm:isShownBy"/>
      <elem attrs="rdf:resource" tag="edm:hasView"/>
      
<!-- MAIS Webdisplay -->
      <elem attrs="rdf:resource" tag="edm:landingPage"/>
      
<!-- Verwijzing naar hoger aggregatie niveau  -->
      <elem tag="ore:isAggregatedBy">
        <attr tag="rdf:resource" uriCheck="true">
          <node-mapping inputPath="/input/record" outputPath="/nant:RDF/nao:Recordaggregatie/ore:isAggregatedBy/@rdf:resource">
            <groovy-code>
              <string>if (_input.dcsubjectrecordsoort_)</string>
              <string>_input.record * { _record -&gt;</string>
              <string>"${baseUrl}/doc/" + NA_lowercase_spec()</string>
              <string>}</string>
            </groovy-code>
          </node-mapping>
        </attr>
      </elem>
      
<!-- Verwijzing naar genest object (onderdeel van deze aggregatie) -->
      <elem tag="ore:aggregates">
        <attr tag="rdf:resource" uriCheck="true">
          <node-mapping inputPath="/input" outputPath="/nant:RDF/nao:Recordaggregatie/ore:aggregates/@rdf:resource">
            <groovy-code>
              <string>if (_input.dcsubjectrecordsoort_)</string>
              <string>"${baseUrl}/id/archiefeenheid/${_uniqueIdentifier}"</string>
            </groovy-code>
          </node-mapping>
        </attr>
      </elem>
      
<!-- Maker van de aggregatie / record  -->
      <elem attrs="rdf:resource" tag="dcterms:creator"/>
      
<!-- Wat voor soort (type) aggregatie het is. Bij voorkeur gecontrolleerde termen gebruiken bv. <http://archief.nl/def/TypePhotoAggregation> -->
      <elem attrs="rdf:resource,xml:lang" tag="dcterms:type"/>
      <elem tag="nao:isAggregatietype">
        <attr tag="rdf:resource" uriCheck="true">
          <node-mapping inputPath="/input" outputPath="/nant:RDF/nao:Recordaggregatie/nao:isAggregatietype/@rdf:resource">
            <groovy-code>
              <string>if (_input.dcsubjectrecordsoort_ == "NTRecord") {</string>
              <string>"${baseUrl}/def/IndexRecord"</string>
              <string>}</string>
            </groovy-code>
          </node-mapping>
        </attr>
        <attr tag="xml:lang"/>
      </elem>
      
<!-- Wanneer de aggregatie gemaakt is -->
      <elem attrs="xml:lang, rdf:datatype" tag="dcterms:created"/>
      
<!-- MAIS Wijzigingsdatum -->
      <elem attrs="rdf:resource,xml:lang,rdf:datatype" tag="dcterms:modified"/>
    </elem>
    
<!-- end elem - RecordAggregation -->
    
<!-- start elem - Archiefeenheid -->
    
<!-- Fysieke objecten of entiteiten. Gebruik "id" als onderdeel van de URI. -->
    
<!-- Een foto, persoon of echte plaats zijn entiteiten. Zie ook Niet-informatie-objecten. -->
    
<!-- Hiervoor wordt de GUID van MAIS gebruikt -->
    
<!-- vanaf record 1 en hoger -->
    <elem tag="nao:Archiefeenheid">
      <attr tag="rdf:about">
        <node-mapping inputPath="/input" outputPath="/nant:RDF/nao:Archiefeenheid/rdf:about">
          <groovy-code>
            <string>if (_input.dcsubjectrecordsoort_ == "NTRecord") {</string>
            <string>"${baseUrl}/id/archiefeenheid/${_uniqueIdentifier}"</string>
            <string>}</string>
          </groovy-code>
        </node-mapping>				
      </attr>
      
<!-- Additioneel type dd 6-7-2018  -->
      <elem attrs="rdf:resource" tag="rdf:type"/>
      
<!-- Indien mogelijk een label toewijzen -->
      <elem attrs="xml:lang" tag="rdfs:label">
        <node-mapping inputPath="/input" outputPath="/nant:RDF/nao:Archiefeenheid/rdfs:label">
          <groovy-code>
            <string>if (_input.dcsubjectrecordsoort_)</string>
            <string>"${_input.dcsubjectaet_}:${_uniqueIdentifier}"</string>
          </groovy-code>
        </node-mapping>			
      </elem>						
      <elem attrs="xml:lang" tag="skos:prefLabel"/>
      <elem attrs="xml:lang" tag="skos:altLabel"/>
      
<!-- Wat voor soort type entiteit het is. Bij voorkeur gecontrolleerde termen gebruiken bv. <http://archief.nl/def/Foto/  -->
      <elem attrs="rdf:resource,xml:lang" tag="nao:isArchiefeenheidtype"/>
      <elem attrs="rdf:resource" tag="foaf:isPrimaryTopicOf"/>
      
<!-- FN 18-02-2021 Archiefbloknummer-->
      <elem attrs="xml:lang" tag="nao:archiefbloknummer"/>			
      
<!-- MAIS toegangscode / nummer archiefinventaris / toegangsnummer-->
      <elem attrs="xml:lang" tag="nao:inventarisnummer"/>
      <elem attrs="xml:lang" tag="nao:bestanddeelnummer"/>			
      
<!-- MAIS bestanddeelnummer -->
      <elem attrs="xml:lang" tag="nao:dossiernummer"/>
      <elem attrs="xml:lang" tag="nao:toegangsnummer"/>
      
<!-- guid MAIS -->
      <elem attrs="xml:lang" tag="dc:identifier"/>
      <elem attrs="xml:lang,rdf:datatype" tag="dc:date"/>
      
<!-- start nesting - dcterms:relation -->
      <elem attrs="xml:lang, rdf:datatype" tag="dcterms:date"/>
      
<!-- MAIS Afmeting | MAIS Vorm (bijvoorbeeld 13 x 18 cm) -->
      <elem attrs="xml:lang" tag="dc:format"/>
      
<!-- "MAIS Materiaal (bijvoorbeeld Foto zwart/wit)" -->
      <elem attrs="xml:lang" tag="dc:type"/>
      
<!--20190412 FN Toegevoegd tbv. Het materiaaltype (bijv. foto zwart/wit) kan dmv een skos:Concept worden opgebouwd. -->
      <elem attrs="rdf:resource" tag="nao:isMateriaaltype"/>
      
<!-- GK 20181101 voor verwijzing naar archiefstuk. Toegevoegd in recorddef 0.08 -->
      
<!-- JG  20220103 Split toegevoegd in geval de archivelinks in een veld staan -->
      <elem attrs="xml:lang" tag="nao:archiefLink">
        <node-mapping inputPath="/input" outputPath="/nant:RDF/nao:Archiefeenheid/nao:archiefLink">
          <groovy-code>
            <string>if (_input.dcsubjectrecordsoort_)</string>
            <string>"${_input.dcsubjectvwzarchivelink_}".split("\\|").toList().findAll { !it.toString().isNumber() }</string>
          </groovy-code>
        </node-mapping>			
      </elem>
    </elem>
    
<!-- end elem - Archiefeenheid -->
    
<!-- start elem - Archiefbeschrijving -->
    <elem attrs="rdf:about" tag="nao:Archiefbeschrijving" uriCheck="true">
      
<!-- Additioneel type dd 6-7-2018  -->
      <elem attrs="rdf:resource" tag="rdf:type"/>
      
<!-- Indien mogelijk een label toewijzen -->
      <elem attrs="xml:lang" tag="rdfs:label"/>
      <elem attrs="xml:lang" tag="skos:prefLabel"/>
      <elem attrs="xml:lang" tag="skos:altLabel"/>
      <elem attrs="xml:lang" tag="dc:description"/>
      
<!-- Wordt gebruikt voor het samenstellen van de handle -->
      <elem attrs="rdf:resource,xml:lang" tag="nao:persistentIdentifier"/>
      
<!-- Verwijzing vanuit foto naar zichtexemplaar-->
      <elem attrs="rdf:resource" tag="edm:hasView"/>
      
<!-- GK 20181023 The subject is a document that, to any extent, describes the object tbv. rechtzaken i.h.b. nt00306 -->
      <elem attrs="rdf:resource,xml:lang" tag="ov:describes"/>
      
<!-- Extra beschrijving indien beschikbaar -->
      <elem attrs="xml:lang" tag="nao:toelichting"/>
      
<!-- MAIS Trefwoorden: algemeen -->
      <elem attrs="xml:lang" tag="dc:subject"/>
      <elem attrs="xml:lang" tag="nao:titelFotocollectie"/>
      <elem attrs="xml:lang" tag="nao:titelFotoserie"/>			
      <elem attrs="xml:lang" tag="nao:trefwoordAlgemeen"/>
      <elem attrs="xml:lang" tag="nao:trefwoordPersoon"/>
      <elem attrs="xml:lang" tag="nao:trefwoordLocatie"/>
      <elem attrs="xml:lang" tag="nao:trefwoordOrganisatie"/>			
      
<!-- Verwijzingen naar thesauri of anderszijds vastgestelde gestructureerde data op basis van trefwoorden uit Mais -->
      
<!-- MAIS Relaties:thesaurusterm algemeen. Als object van dcterms:subject, bijvoorbeeld de GTAA thesaurusterm "Oorlogen" <http://data.beeldengeluid.nl/gtaa/216561>.  -->
      <elem attrs="rdf:resource" tag="dcterms:subject"/>
      
<!-- MAIS Relaties:geografische term. Als object van dcterms:subject of als verwijzing in hg:PlaceInTime met rdfs:seeAlso <http://data.beeldengeluid.nl/gtaa/xxxx> -->
      <elem attrs="rdf:resource" tag="foaf:primaryTopic"/>
      
<!-- The primary topic of this aggregation, record or document. -->
      <elem attrs="rdf:resource" tag="foaf:isPrimaryTopicOf"/>
      
<!-- Coverage kan gebruikt worden voor tijd en lokatie. Als het lokatie is: MAIS Lokatie in Beschrijven (bijvoorbeeld Frankrijk). Als het tijd is: MAIS Datering geschat-->
      <elem attrs="xml:lang" tag="dc:coverage"/>
      
<!-- Dc:terms Spatial kan gebruikt worden voor lokatie. GK 20180928-->
      <elem attrs="rdf:resource" tag="dcterms:spatial"/>
      
<!-- MAIS Verwijzing -->
      <elem attrs="xml:lang" tag="dc:relation"/>
      <elem attrs="rdf:resource" tag="dcterms:relation"/>
      <elem attrs="xml:lang" tag="dc:date"/>
      
<!-- start nesting - dcterms:relation -->
      <elem attrs="xml:lang, rdf:datatype" tag="dcterms:date"/>
      
<!-- MAIS Fotograaf | Memorix Vervaardiger | MAIS Auteur (bijvoorbeeld Onbekend / Publiek Domein) -->
      <elem attrs="rdf:resource,xml:lang" tag="dc:creator"/>
      
<!-- MAIS Vervaardiger -->
      <elem attrs="rdf:resource,xml:lang" tag="dcterms:creator"/>
      
<!-- MAIS Aanmaakdatum -->
      <elem attrs="rdf:datatype,xml:lang" tag="dcterms:created"/>
      
<!-- MAIS Informatie aanbieder beschrijving -->
      <elem attrs="xml:lang" tag="dc:publisher"/>
      
<!-- MAIS Informatie aanbieder beschrijving. Verwijzing naar de organisatie die verantwoordelijk is voor het publiceren. Gebruik bij voorkeur een gecontrolleerde term bv. <http://archief.nl/NL-HaNA/organisatie/id/NationaalArchief> -->
      <elem attrs="rdf:resource,xml:lang" tag="dcterms:publisher"/>
      
<!-- MAIS Licentie methode -->
      <elem attrs="xml:lang" tag="dc:license"/>
      
<!-- MAIS Licentie methode gecontrolleerde verwijzing beschikbaar (URI) -->
      <elem attrs="rdf:resource,xml:lang" tag="dcterms:license"/>
      <elem attrs="xml:lang" tag="rdfs:comment"/>
      
<!-- Tijdsaanduiding aangepast in combinatie met type 6-7-2018-->
      
<!-- MAIS Begindatum (bijvoorbeeld 0000-00-00) -->
      <elem attrs="xml:lang" tag="edm:begin"/>
      
<!-- MAIS Einddatum (bijvoorbeeld 0000-00-00) -->
      <elem attrs="xml:lang" tag="edm:end"/>
      
<!-- GK 20180928 - MAIS Datumaanduiding ("ca", "tussen", "voor", etc) -->
      <elem attrs="xml:lang" tag="nav:datumVoorzetsel"/>
      
<!-- end Tijdsaanduiding -->
      
<!-- MAIS Schaal -->
      <elem attrs="xml:lang" tag="bf:scale"/>
      
<!-- Toegangsrecht volgens Open Digital Rights Language -->
      <elem attrs="rdf:resource" tag="odrl:hasPolicy"/>
      
<!-- Eventuele Opmerkingen -->
      <elem attrs="xml:lang" tag="skos:note"/>
    </elem>
    
<!-- end elem - Archiefbeschrijving -->
    
<!-- start elem - WebResource -->
    <elem attrs="rdf:about" tag="edm:WebResource">
      
<!-- 20190412 FN Toegevoegd zodat de odrl:Asset kan worden meegegeven -->
      <elem attrs="rdf:resource" tag="rdf:type"/>
      <elem attrs="xml:lang" tag="dc:identifier"/>
      
<!-- 20181005 GK toegevoegd voor bestandsnaam. Is: dcterms_hasPart_media -->
      <elem attrs="xml:lang" tag="ebucore:filename"/>
      
<!-- Indien mogelijk een label toewijzen -->
      <elem attrs="xml:lang" tag="rdfs:label"/>
      
<!-- 20190412 FN Toegevoegd -->
      <elem attrs="xml:lang" tag="skos:prefLabel"/>
      
<!-- Vervaardiger van digitaal object. Volgens EDM: For the creator of the web resource. -->
      
<!-- If possible supply the identifier of the creator from an authority source. Repeat for multiple creators.  -->
      <elem attrs="xml:lang" tag="dc:creator"/>
      
<!-- Beschrijving van digitaal object. Volgens EDM: Use for an account or description of this digital representation -->
      <elem attrs="xml:lang" tag="dc:description"/>
      
<!-- Metadata over formaat / specificatie (MAM). Bijvoorbeeld: image/jpeg -->
      <elem attrs="xml:lang" tag="dc:format"/>
      
<!-- Volgens EDM: A related resource from which the Web resource is derived in whole or in part. -->
      <elem attrs="xml:lang" tag="dc:source"/>
      
<!-- Volgens EDM:The nature or genre of the digital representation. Ideally the term(s) will be taken from a controlled vocabulary. -->
      <elem attrs="xml:lang" tag="dc:type"/>
      
<!-- Zie dc:type maar dan een gecontrolleerde term zoals nao:TypeDigitalVideo -->
      <elem attrs="xml:lang" tag="dcterms:type"/>
      
<!-- Volgens EDM: An established standard to which the web resource conforms. Bijvoorbeeld W3C of IIIF -->
      <elem attrs="xml:lang" tag="dcterms:conformsTo"/>
      
<!-- Verwijzing naar de IIIF functies van de GAF-server. Link naar API -->
      <elem attrs="rdf:resource,xml:lang" tag="svcs:has_service"/>
      
<!-- Webservices om het digitaal object op te halen -->
      <elem attrs="rdf:resource" tag="nao:webserviceDefault"/>	
      <elem attrs="rdf:resource" tag="nao:webserviceOriginal"/>
      <elem attrs="rdf:resource" tag="nao:webserviceImage"/>	
      <elem attrs="rdf:resource" tag="nao:webserviceThumbnail"/>
      <elem attrs="rdf:resource" tag="nao:webserviceIcon"/>
      <elem attrs="rdf:resource" tag="nao:webserviceIIIF"/> 				
      
<!-- FN 20190711 Toegevoegd om de manifest file automatisch te genereren tbv het correct tonen van de foto in de UniversalViewer.	Tevens is deze ook toegevoegd om de foto-keten R1 sluitend te maken. -->
      <elem attrs="xml:lang" tag="nao:rechtenset"/>
      <elem attrs="xml:lang" tag="nao:parent-uuid"/>
      <elem attrs="xml:lang" tag="nao:file-uuid"/>
      <elem attrs="xml:lang" tag="nao:beeldtype"/>
      <elem attrs="xml:lang" tag="nao:toegang"/>
      <elem attrs="xml:lang" tag="nao:thumbnail"/>
      <elem attrs="xml:lang" tag="nao:handle-uuid"/>
      <elem attrs="xml:lang" tag="nao:manifest"/>
      <elem attrs="xml:lang" tag="nao:manifests"/>
      <elem attrs="xml:lang" tag="nao:bestanddeelnummer"/>
      <elem attrs="xml:lang" tag="nao:openbaarheid"/>
      <elem attrs="xml:lang" tag="nao:du-uuid"/>
      <elem attrs="xml:lang" tag="nao:tenant"/>
      <elem attrs="xml:lang" tag="nao:inventarisnummer"/>
      <elem attrs="xml:lang" tag="nao:volgnummer"/>
      <elem attrs="xml:lang" tag="nao:bestandsnaam"/>
      <elem attrs="xml:lang" tag="nao:download"/>			
      
<!-- Einde toevoeging van elemten tbv manifest file -->
    </elem>
    
<!-- end elem - WebResource -->
    
<!-- start Person zonder nesting -->
    <elem attrs="rdf:about" tag="pnv:Person">
      
<!-- Als identifier bij voorkeur een guid uit het collectiebeheersysteem -->
      <elem attrs="rdf:resource,xml:lang" tag="dc:identifier"/>
      
<!-- Fragment identifier is alleen uniek binnen context van een toegang of NT, bijvoorbeeld een prs_id. Buiten de context (zoals de bijbehorende aggregatie) zal deze referentie sleutel niet uniek zijn, maar binnen de context, of scope - wel. -->
      <elem attrs="xml:lang" tag="nao:fragmentIdentifier"/>
      
<!-- Indien mogelijk een label toewijzen -->
      <elem attrs="xml:lang" tag="rdfs:label"/>
      <elem attrs="xml:lang" tag="skos:prefLabel"/>
      <elem attrs="xml:lang" tag="skos:altLabel"/>
      
<!-- MAIS Trefwoorden: namen. Indien dit veld aanwezig is kan een naa:PersonEntity gemodelleerd worden -->
      <elem attrs="rdf:about" tag="rdfs:seeAlso"/>
      
<!-- Linken naar een andere persoon als deze dezelfde is -->
      <elem attrs="rdf:resource" tag="owl:sameAs"/>
      
<!-- Iets wat deze persoon gemaakt heeft -->
      <elem attrs="rdf:resource" tag="foaf:made"/>
      
<!-- Toegevoegd om link te leggen naar beschrijvingd -->
      <elem attrs="rdf:resource" tag="foaf:isPrimaryTopicOf"/>
      
<!-- Toegevoegd om een rol aan te geven zoals een beroep, status of familielid -->
      <elem attrs="rdf:resource" tag="ebucore:hasRole"/>
      <elem attrs="rdf:resource" tag="nav:heeftBeroep"/>
      
<!-- Extra toegevoegd, geen mapping regels vanuit MAIS -->
      <elem attrs="rdf:resource,xml:lang" tag="dc:description"/>
      <elem attrs="xml:lang" tag="skos:note"/>
      <elem attrs="rdf:resource,xml:lang" tag="nav:heeftGeslacht"/>
      <elem attrs="rdf:resource,xml:lang" tag="nav:heeftReligie"/>
      <elem attrs="rdf:resource,xml:lang,rdf:datatype" tag="schema:birthDate"/>
      <elem attrs="rdf:resource,xml:lang" tag="schema:birthPlace"/>
      <elem attrs="rdf:resource,xml:lang,rdf:datatype" tag="schema:deathDate"/>
      <elem attrs="rdf:resource,xml:lang" tag="schema:deathPlace"/>
      <elem attrs="xml:lang" tag="nav:doopdatum"/>
      <elem attrs="xml:lang" tag="nav:leeftijd"/>
      
<!-- Einde extra toegevoegd -->
      <elem attrs="rdf:about,rdf:parseType" tag="pnv:hasName">
        <elem attrs="rdf:about,rdf:parseType" tag="pnv:PersonName">
          <elem attrs="xml:lang" tag="skos:definition"/>
          <elem attrs="xml:lang" tag="rdfs:label"/>
          <elem attrs="rdf:resource,xml:lang" tag="pnv:nameSpecification"/>
          <elem attrs="xml:lang" tag="pnv:initials"/>
          <elem attrs="xml:lang" tag="pnv:prefix"/>
          <elem attrs="xml:lang" tag="pnv:givenName"/>
          <elem attrs="xml:lang" tag="pnv:givenNameSuffix"/>
          <elem attrs="xml:lang" tag="pnv:firstName"/>
          <elem attrs="xml:lang" tag="pnv:patronym"/>
          <elem attrs="xml:lang" tag="pnv:infixTitle"/>
          <elem attrs="xml:lang" tag="pnv:surnamePrefix"/>
          <elem attrs="xml:lang" tag="pnv:baseSurname"/>
          <elem attrs="xml:lang" tag="pnv:infix"/>
          <elem attrs="xml:lang" tag="pnv:surname"/>
          <elem attrs="xml:lang" tag="pnv:trailingPatronym"/>
          <elem attrs="xml:lang" tag="pnv:suffix"/>
          <elem attrs="xml:lang" tag="pnv:honorificSuffix"/>
          <elem attrs="xml:lang" tag="pnv:disambiguatingDescription"/>
          <elem attrs="xml:lang" tag="pnv:literalName"/>
        </elem>
      </elem>
      <elem attrs="rdf:resource,xml:lang" tag="nav:heeftVerblijfplaats"/>
      <elem attrs="rdf:resource,xml:lang" tag="nav:wasEigendomVan"/>
      
<!-- 20190125 FN This property associates the people, things or information resources with an event at which they were present -->
      <elem attrs="rdf:resource" tag="edm:wasPresentAt"/>
      
<!-- 20190125 FN edm:hasMet relates a resource with the objects or phenomena that have happened to or have happened together with the resource under consideration. We can abstractly think of history and the present as a series of “meetings” between people and other things in space-time. Therefore we name this relationship as the things the object “has met” in the course of its existence. These meetings are events in the proper sense, in which other people and things participate in any role. -->
      <elem attrs="rdf:resource" tag="edm:hasMet"/>
      
<!-- FN 20191018 extra mogelijkheid om persoonrelaties te definieren -->
      <elem attrs="rdf:resource" tag="agrl:hasSpouse"/>
      <elem attrs="rdf:resource" tag="agrl:hasFianceeFiance"/>
      <elem attrs="rdf:resource" tag="agrl:hasParent"/>
      <elem attrs="rdf:resource" tag="agrl:hasChild"/>
      <elem attrs="rdf:resource" tag="schema:memberOf"/>
      
<!-- FN 2020-07-02 Diverse termen tbv de Suriname NT's -->
      <elem attrs="rdf:resource,xml:lang" tag="nav:heeftContract"/>
      <elem attrs="xml:lang" tag="nav:hercontract"/>
      <elem tag="nav:contractnummer"/>
      <elem tag="nav:monsternummer"/>
      <elem tag="nav:nummerVrijeArbeider"/>
    </elem>
    
<!-- end - Person -->
    
<!-- start TimeSpan zonder nesting-->
    
<!-- aanpassing - 16-09-2019 - automatische mapping: geldig voor zowel Beeldbank en Nadere toegangen -->
    <elem attrs="rdf:about" tag="edm:TimeSpan">
      <elem attrs="xml:lang" tag="rdfs:label"/>
      <elem attrs="xml:lang" tag="skos:prefLabel"/>
      <elem attrs="xml:lang" tag="skos:altLabel"/>
      
<!-- MAIS Datering geschat -->
      <elem attrs="xml:lang" tag="dc:coverage"/>
      
<!-- MAIS datumaanduiding (bijvoorbeeld Circa) -->
      <elem attrs="xml:lang" tag="dc:description"/>
      
<!-- MAIS Begindatum (bijvoorbeeld 0000-00-00) -->
      <elem attrs="xml:lang" tag="edm:begin"/>
      
<!-- MAIS Einddatum (bijvoorbeeld 0000-00-00) -->
      <elem attrs="xml:lang" tag="edm:end"/>
    </elem>
    
<!-- end TimeSpan zonder nesting -->
    
<!-- 20181105 GK toegevoegd n.a.v. NT00306 voor instanties zoals Hoge Raad -->
    <elem attrs="rdf:about" tag="org:FormalOrganization">
      <elem attrs="xml:lang" tag="dc:identifier"/>
      <elem attrs="xml:lang" tag="rdfs:label"/>
      <elem attrs="xml:lang" tag="skos:prefLabel"/>
      <elem attrs="xml:lang" tag="skos:altLabel"/>
      <elem attrs="xml:lang" tag="skos:note"/>
      <elem attrs="xml:lang" tag="dc:description"/>
      <elem attrs="rdf:resource,xml:lang" tag="vcard:hasUrl"/>
      <elem attrs="rdf:resource,xml:lang" tag="vcard:hasEmail"/>
    </elem>
    
<!-- start PlaceInTime -->
    <elem attrs="rdf:about" tag="hg:PlaceInTime">
      
<!-- GK 20180928 Toegevoegd type -->
      <elem attrs="rdf:resource,xml:lang" tag="dcterms:type"/>
      <elem attrs="xml:lang" tag="rdfs:label"/>
      <elem attrs="xml:lang" tag="skos:prefLabel"/>
      <elem attrs="xml:lang" tag="skos:altLabel"/>
      <elem attrs="xml:lang" tag="sem:hasEarliestBeginTimeStamp"/>
      <elem attrs="xml:lang" tag="sem:hasLatestBeginTimeStamp"/>
      <elem attrs="xml:lang" tag="sem:hasEarliestEndTimeStamp"/>
      <elem attrs="xml:lang" tag="sem:hasLatestEndTimeStamp"/>
      <elem attrs="rdf:resource" tag="owl:sameAs"/>
      <elem attrs="rdf:resource" tag="schema:name"/>
      <elem attrs="rdf:resource" tag="geo:hasGeometry"/>
      <elem attrs="rdf:resource" tag="hg:sameHgConcept"/>
      <elem attrs="rdf:resource" tag="hg:containsHgConcept"/>
      <elem attrs="rdf:resource" tag="hg:withinHgConcept"/>
      <elem attrs="rdf:resource" tag="hg:intersectsHgConcept"/>
      <elem attrs="rdf:resource" tag="hg:absorbed"/>
      <elem attrs="rdf:resource" tag="hg:absorbedBy"/>
      <elem attrs="rdf:resource" tag="hg:originated"/>
      <elem attrs="rdf:resource" tag="hg:originatedFrom"/>
      <elem attrs="rdf:resource" tag="hg:contains"/>
      <elem attrs="rdf:resource" tag="hg:liesIn"/>
    </elem>
    
<!-- end PlaceInTime -->
    
<!-- start elem - Policy -->
    <elem attrs="rdf:about" tag="odrl:Policy" uriCheck="true">
      <elem attrs="xml:lang" tag="dc:type"/>
      <elem attrs="rdf:resource,xml:lang" tag="odrl:permission"/>
      <elem attrs="xml:lang" tag="rdfs:label"/>
      <elem attrs="rdf:resource,xml:lang" tag="foaf:primaryTopic"/>
      <elem attrs="xml:lang" tag="dc:rights"/>
      <elem attrs="rdf:resource, xml:lang" tag="dcterms:rightsHolder"/>
    </elem>
    
<!-- end Policy -->
    
<!-- start elem - Het WAT: SKOS GK Toegevoegd 20180928-->
    <elem attrs="rdf:about" tag="skos:Concept">
      <elem attrs="xml:lang" tag="rdfs:label"/>
      <elem attrs="xml:lang" tag="skos:prefLabel"/>
      <elem attrs="xml:lang" tag="skos:altLabel"/>
      <elem attrs="xml:lang" tag="skos:hiddenLabel"/>
      <elem attrs="xml:lang" tag="skos:note"/>
      <elem attrs="rdf:resource,xml:lang" tag="skos:inScheme"/>
      
<!-- Linken naar andere concept dat hetzelfde is -->
      <elem attrs="rdf:resource" tag="owl:sameAs"/>
      
<!-- Linken naar een concept dat er op lijkt -->
      <elem attrs="rdf:about" tag="rdfs:seeAlso"/>
    </elem>
    
<!-- end elem - Dataset -->
    <elem attrs="rdf:about" tag="nav:Contract">
      <elem attrs="xml:lang" tag="rdfs:label"/>
      <elem attrs="xml:lang" tag="skos:prefLabel"/>
      <elem attrs="xml:lang" tag="skos:altLabel"/>
      <elem attrs="xml:lang" tag="edm:begin"/>
      <elem attrs="xml:lang" tag="edm:end"/>
    </elem>
    <elem attrs="rdf:about" tag="nav:Reis">
      <elem attrs="xml:lang" tag="rdfs:label"/>
      <elem attrs="xml:lang" tag="skos:prefLabel"/>
      <elem attrs="xml:lang" tag="skos:altLabel"/>
      <elem attrs="rdf:resource" tag="nav:datumVanAankomst"/>
      <elem attrs="rdf:resource" tag="nav:datumVanVertrek"/>
      <elem attrs="rdf:resource" tag="nav:heeftPlaatsVanAankomst"/>
      <elem attrs="rdf:resource" tag="nav:heeftPlaatsVanVertrek"/>
      <elem attrs="rdf:resource" tag="nav:heefLading"/>
      <elem attrs="rdf:resource" tag="nav:heefSchip"/>
      <elem attrs="rdf:resource" tag="edm:wasPresentAt"/>
    </elem>
    <elem attrs="rdf:about" tag="nav:Vergaderstuk">
      <elem attrs="xml:lang" tag="rdfs:label"/>
      <elem attrs="xml:lang" tag="skos:prefLabel"/>
      <elem attrs="rdf:resource,xml:lang" tag="dc:type"/>
      <elem attrs="xml:lang" tag="dc:description"/>
      <elem attrs="xml:lang" tag="dc:date"/>	
      <elem attrs="xml:lang" tag="dc:subject"/>			
    </elem>		
    <elem attrs="rdf:about" tag="nav:Brief">
      <elem attrs="xml:lang" tag="rdfs:label"/>
      <elem attrs="xml:lang" tag="skos:prefLabel"/>
      <elem attrs="xml:lang" tag="dc:date"/>	
      <elem attrs="xml:lang" tag="nav:rubriek"/>			
      <elem attrs="rdf:resource" tag="nav:isOvergekomenVan"/>
      <elem attrs="rdf:resource" tag="nav:heeftGenoemdePlaats"/>			
      <elem attrs="xml:lang" tag="dc:description"/>								
    </elem>			
    <elem attrs="rdf:about" tag="edm:Event">
      <elem attrs="xml:lang" tag="rdfs:label"/>
      <elem attrs="xml:lang" tag="skos:prefLabel"/>
      <elem attrs="xml:lang" tag="skos:altLabel"/>
      <elem attrs="xml:lang,rdf:datatype" tag="dc:date"/>
      <elem attrs="xml:lang, rdf:datatype" tag="dcterms:date"/>
      <elem attrs="rdf:resource" tag="edm:happendAt"/>
      <elem attrs="rdf:resource" tag="edm:occuredAt"/>
      <elem attrs="rdf:resource" tag="edm:wasPresentAt"/>
    </elem>
    <elem attrs="rdf:about" tag="nav:Hoofdenlijstitembeschrijving">
      <elem attrs="xml:lang" tag="rdfs:label"/>
      <elem attrs="xml:lang" tag="skos:prefLabel"/>
      <elem attrs="xml:lang" tag="dc:coverage"/>
      <elem attrs="xml:lang" tag="nav:verwijswoorden"/>
      <elem attrs="xml:lang, rdf:resource" tag="nav:heeftRubriek"/>		
      <elem attrs="xml:lang" tag="nav:eersteBladzijde"/>	
      <elem attrs="xml:lang" tag="nav:totaalAantalBladzijdes"/>	
      <elem attrs="xml:lang" tag="nav:verwijzing"/>							
      <elem attrs="xml:lang" tag="nav:onderwerp"/>	
      <elem attrs="xml:lang" tag="nav:opmerking"/>
    </elem>		
    <elem attrs="rdf:about" tag="nav:Regestbeschrijving">
      <elem attrs="xml:lang" tag="rdfs:label"/>
      <elem attrs="xml:lang" tag="skos:prefLabel"/>
      <elem attrs="xml:lang" tag="nav:regestnummer"/>
      <elem attrs="xml:lang" tag="dc:description"/>
      <elem attrs="xml:lang" tag="nav:materieleVorm"/>
      <elem attrs="xml:lang" tag="nav:opmerking"/>
      <elem attrs="xml:lang" tag="nao:inventarisnummer"/>
      <elem attrs="xml:lang" tag="edm:begin"/>
      <elem attrs="xml:lang" tag="edm:end"/>
      <elem attrs="xml:lang" tag="dct:date"/>
      <elem attrs="xml:lang" tag="nav:dateringCharter"/>
      <elem attrs="xml:lang" tag="nav:verwijzing"/>
      <elem attrs="xml:lang" tag="nav:dorsaal"/>					
      <elem attrs="xml:lang" tag="nav:zegels"/>										
    </elem>			
    
<!-- end edm:Event zonder nesting -->
    
<!-- 20190412 FN nao:Agent tbv van de vervaardiger van een foto. Dit kan bijv. een persoon of een organisatie zijn. Vanuit Archiefbeschrijving->dct:creator kan worden gelinked naar de nao:Agent -->
    <elem attrs="rdf:about" tag="nao:Agent">
      
<!-- Indien mogelijk een label toewijzen -->
      <elem attrs="xml:lang" tag="rdfs:label"/>
      <elem attrs="xml:lang" tag="skos:prefLabel"/>
    </elem>
    
<!-- end nao:Agent zonder nesting -->
  </root>
  
<!-- END - root -->
  <field-markers/>
  <opts/>
  <docs><!-- Voorbeeld voor het toepassen van instructies<doc path="/nant:RDF/ore:Aggregation"><para name="Label">ore:Aggregation</para><para name="Definition">ore:Aggregation komt mogelijk te vervallen en wordt niet in de nieuwe record definitions niet meer gebruikt. RecordAggregation is het startpunt van de mapping en hard aan Pockets gekoppeld.</para></doc>--></docs>
</record-definition>
